import * as React from 'react';
import { fetchEvents } from '../utils/fetchEvents';
import { EventComponent } from './EventComponent';
import { LoadingComponent } from './LoadingComponent';
import { ErrorComponent } from './ErrorComponent';
import { Event } from '../model/Event';
import { Form } from './Form';
import { translateEventType } from '../utils/translate';
import { categorizeEvents } from '../utils/categorizeEvents';
import { IEventsCategorized } from '../model/IEventsCategorized';
import { DateRange } from '../model/DateRange';
import { IEvents } from '../model/IEvents';

interface ITalksPageProps {}

interface ITalksPageState {
    error: null | string;
    range: DateRange;
    events: null | IEvents;
}

export class TalksPage extends React.Component<ITalksPageProps, ITalksPageState> {
    state: ITalksPageState = {
        error: null,
        range: DateRange.FROM_CURRENT_MONTH,
        events: null,
    };

    constructor(props: ITalksPageProps) {
        super(props);
        this.loadEvents();
    }

    private async loadEvents() {
        try {
            const events = await fetchEvents();
            //console.log('events', events);
            this.setState({ events });
        } catch (error) {
            this.setState({ error: error.message });
        }
    }

    render() {
        let categorizedEvents: null | IEventsCategorized;

        if (this.state.events) {
            const filteredEvents = this.state.events.filter((event) =>
                event instanceof Event ? this.state.range.isIn(event.date) : true,
            );

            //console.log('filteredEvents', filteredEvents);
            categorizedEvents = categorizeEvents(filteredEvents);
        } else {
            categorizedEvents = null;
        }

        return (
            <>
                <div className="content">
                    <div className="front black">
                        <div className="inner">
                            <h1>M√°me p≈ôehled o nejzaj√≠mavƒõj≈°√≠ch ud√°lostech z IT &amp; startupov√©ho svƒõta.</h1>
                            <h2 className="font-light">
                                Dejte n√°m Va≈°√≠ emailovou adresu a my V√°m budeme pravidelnƒõ jednou za mƒõs√≠c pos√≠lat co se
                                dƒõje:
                            </h2>
                            <Form />

                            <h2 className="separator font-light">
                                A jak takov√Ω mail vypad√°? Tady m√°te ≈æivou uk√°zku z rozpracovan√©ho mailu na dal≈°√≠ mƒõs√≠c:
                            </h2>
                        </div>
                    </div>

                    <div className="letter white">
                        {/*
                        TODO: Or make tabs - see bellow
                        <div className="tab" onClick={() => this.setState({ range: DateRange.CURRENT_MONTH })}>
                            Aktu√°n√≠ mƒõs√≠c
                        </div>
                        <div className="tab" onClick={() => this.setState({ range: DateRange.ALL })}>
                            V≈°e
                        </div>
                         */}

                        <div className="inner">
                            {/*
                            TODO: Here can be a selecotr of the months but firstly we need to add backend and better DB so it is not priority now.
                            
                            TODO: Or maybe like this:
                            <select>
                                <option>Aktu√°ln√≠ mƒõs√≠c</option>
                                <option>Budouc√≠ ud√°losti</option>
                                <option>Budouc√≠ ud√°losti tento mƒõs√≠c</option>
                                <option>V≈°e</option>
                            </select>

                            */}
                            <h2>{`üìÖ Konference / meetupy / hackathony ‚Äì co se dƒõje z IT / Startupov√© akce üåÜ`}</h2>
                            <br />
                            <br />
                            Ahoj,
                            <br />
                            opƒõt jsme dali dohromady seznam ud√°lost√≠, na kter√© se vyplat√≠ zaj√≠t.
                            <br />
                            {/*
                        <p>Ve ƒçtvrtek 7.11 se bude konat ...</p>
                        <p>Ve ƒçtvrtek 7.11 se bude konat ...</p>
                        */}
                            {this.state.error && (
                                <ErrorComponent>
                                    <pre>{this.state.error}</pre>
                                </ErrorComponent>
                            )}
                            {!categorizedEvents ? (
                                <LoadingComponent />
                            ) : (
                                Object.keys(categorizedEvents).map((type) => (
                                    <p key={type}>
                                        <h2>{translateEventType(type as any)}</h2>
                                        <span>
                                            {categorizedEvents![type].map((item, key) =>
                                                item instanceof Event ? (
                                                    <EventComponent {...{ event: item, key }} />
                                                ) : (
                                                    <ErrorComponent {...{ key }}>{item}</ErrorComponent>
                                                ),
                                            )}
                                        </span>
                                    </p>
                                ))
                            )}
                            <br />
                            <br />
                            PS: <b>Budeme r√°di za va≈°e n√°vrhy a p≈ôipom√≠nky</b>, m≈Ø≈æete <b>odpovƒõdƒõt rovnou na email</b>.
                            <br />
                            PPS: Pokud u≈æ nechcete dostat dal≈°√≠ email, kliknƒõte sem pro jejich odhl√°≈°en√≠.
                        </div>
                    </div>

                    <footer className="footer black">
                        <a href="https://www.pavolhejny/">Pavol</a>
                        &nbsp;&amp;&nbsp;
                        <a href="https://www.linkedin.com/in/tereza-texlova/">Tereza</a>
                    </footer>
                </div>
            </>
        );
    }
}
