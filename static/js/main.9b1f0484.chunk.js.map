{"version":3,"sources":["serviceWorker.ts","model/Event.ts","config.ts","utils/enumToArray.ts","utils/compareDates.ts","utils/fetchEvents.ts","components/EventComponent.tsx","utils/translate.ts","components/LoadingComponent.tsx","components/ErrorComponent.tsx","components/Form.tsx","model/DateRange.ts","components/TalksPage.tsx","utils/categorizeEvents.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","EventType","EventPriceCurrency","EVENTS_CSV_URL","ConfigChecker","from","get","url","required","value","enumToArray","enumerable","Object","keys","map","key","filter","v","Event","data","name","topic","city","year","month","day","days","date","time","priceAmount","priceCurrency","codeName","codePercent","type","web","inMail","c","this","number","parseInt","split","trim","isNaN","Error","Date","getDate","asType","includes","boolean","compareEventsbyDate","event1","event2","undefined","date1","date2","delta","error","console","warn","compareDates","fetchEvents","a","async","fetch","toString","cache","response","text","dataString","papaparse","parse","header","object","emptyKeysAsUndefined","decapitalize","isNotEmpty","t","message","sort","EventComponent","event","renderPrice","price","isNullOrUndefined","Math","ceil","currency","CZK","EUR","translateCurrency","className","href","target","rel","moment","locale","dateString","format","replace","substr","toUpperCase","showDate","showTime","floor","LoadingComponent","ErrorComponent","children","Form","action","method","id","defaultValue","onFocus","htmlFor","DateRange","to","currentDate","getMonth","getFullYear","ALL","CURRENT_MONTH","forMonth","FROM_CURRENT_MONTH","TalksPage","props","state","range","events","loadEvents","setState","categorizedEvents","filteredEvents","isIn","eventsCategorized","eventOrError","push","eventsCategorizedFiltered","eventType","length","categorizeEvents","HACKATHON","CONFERENCE","MEETUP","WORKSHOP","translateEventType","item","React","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b1f0484.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import { ConfigChecker, IConfigSource } from 'configchecker';\r\nimport { enumToArray } from '../utils/enumToArray';\r\n\r\nexport enum EventType {\r\n    CONFERENCE = 'CONFERENCE',\r\n    MEETUP = 'MEETUP',\r\n    WORKSHOP = 'WORKSHOP',\r\n    HACKATHON = 'HACKATHON',\r\n}\r\n\r\nexport enum EventPriceCurrency {\r\n    CZK,\r\n    EUR,\r\n}\r\n\r\nexport class Event {\r\n    //TODO: readonly id: number;\r\n    public name: string;\r\n    public topic?: string;\r\n    public city?: string;\r\n    public year: number;\r\n    public month: number;\r\n    public day: number;\r\n    public days: string;\r\n    public date: Date;\r\n    public time?: string;\r\n    public priceAmount?: number;\r\n    public priceCurrency?: EventPriceCurrency;\r\n    public codeName?: string;\r\n    public codePercent?: number;\r\n    public type: EventType;\r\n    public web: URL;\r\n    public inMail: boolean;\r\n\r\n    constructor(data: IConfigSource) {\r\n        const c = ConfigChecker.from(data);\r\n\r\n        this.name = c.get('name').required().value;\r\n        this.topic = c.get('topic').value;\r\n        this.city = c.get('city').value;\r\n        this.year = c\r\n            .get('year')\r\n            .number()\r\n            .required().value;\r\n        this.month = c\r\n            .get('month')\r\n            .number()\r\n            .required().value;\r\n        this.days = c.get('days').required().value;\r\n        this.day = parseInt(this.days.split('-')[0].trim());\r\n\r\n        if (isNaN(this.day)) {\r\n            throw new Error(`Day parsed from \"${this.days}\" is NaN.`);\r\n        }\r\n\r\n        try {\r\n            this.date = new Date(this.year, this.month - 1, this.day);\r\n            if (isNaN(this.date.getDate())) throw new Error();\r\n        } catch {\r\n            throw new Error(`Cannot create a valie new Date(${this.year}, ${this.month} - 1, ${this.day});`);\r\n        }\r\n\r\n        this.time = c.get('time').required().value;\r\n        this.priceAmount = c.get('priceAmount').number().value; //.required()\r\n        // TODO: Configchecker should take number 0 as defined\r\n\r\n        this.priceCurrency = (c.get('priceCurrency').value as unknown) as EventPriceCurrency;\r\n        this.codeName = c.get('codeName').value;\r\n        this.codePercent = c.get('codePercent').number().value;\r\n\r\n        // TODO: Better\r\n        if (this.codePercent) this.codePercent = this.codePercent / 100;\r\n\r\n        this.type = c\r\n            .get('type')\r\n            .required()\r\n            .asType<EventType>().value;\r\n        // TODO: Configchecker native in asType\r\n        // TODO: Typescript Enum in Configchecker\r\n        if (!enumToArray(EventType).includes((this.type as unknown) as string)) {\r\n            throw new Error(`Wrong type \"${this.type}\".`);\r\n        }\r\n        this.web = c\r\n            .get('web')\r\n            .url()\r\n            .required().value;\r\n        this.inMail = c\r\n            .get('inMail')\r\n            .boolean()\r\n            .required().value;\r\n\r\n        //throw new Error(`Error test`);\r\n    }\r\n\r\n    /*static error(error: Error):Event{\r\n        return new Event();\r\n    }*/\r\n}\r\n","import { ConfigChecker } from 'configchecker';\r\n\r\n// TODO: Better\r\nconst config = ConfigChecker.from(\r\n    /*process.env*/\r\n    {\r\n        EVENTS_CSV_URL: `https://docs.google.com/spreadsheets/d/e/2PACX-1vRq0s15Wi8g4c61FOqIhpn0Lw4azPJdgQ3XmJ3uLDSCqQVs52nJa99YJjOGhl-XJZ713zCprzuYOpVu/pub?gid=0&single=true&output=csv`,\r\n    },\r\n);\r\n\r\n//export const PORT = config.get('PORT', 'Server port').number().default(3000).value;\r\nexport const EVENTS_CSV_URL = config\r\n    .get('EVENTS_CSV_URL')\r\n    .url()\r\n    .required().value; //TODO: use in all places that debugs something\r\n","export function enumToArray(enumerable: any): string[] {\r\n    let enumMembers: any[] = Object.keys(enumerable).map((key) => enumerable[key]);\r\n    let enumValues: string[] = enumMembers.filter((v) => typeof v === 'string');\r\n    return enumValues;\r\n}\r\n","import { Event } from '../model/Event';\r\n\r\ntype CompareResult = 1 | -1 | 0;\r\n\r\nexport function compareEventsbyDate(event1?: Event | string, event2?: Event | string): CompareResult {\r\n    if (typeof event1 === 'string') event1 = undefined;\r\n    if (typeof event2 === 'string') event2 = undefined;\r\n    return compareDates(event1 ? event1.date : undefined, event2 ? event2.date : undefined);\r\n}\r\n\r\nexport function compareDates(date1 = new Date(), date2 = new Date()): CompareResult {\r\n    try {\r\n        const delta = ((new Date(date2) as any) as number) - ((new Date(date1) as any) as number);\r\n\r\n        if (delta > 0) {\r\n            return -1;\r\n        } else if (delta < 0) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    } catch (error) {\r\n        console.warn(error);\r\n        return -1;\r\n    }\r\n}\r\n","import { EVENTS_CSV_URL } from './../config';\r\nimport { IConfigSource } from 'configchecker';\r\nimport { decapitalize, emptyKeysAsUndefined, isNotEmpty } from 'configchecker/lib/utils/object';\r\nimport papaparse from 'papaparse';\r\nimport { Event } from '../model/Event';\r\nimport { compareEventsbyDate } from './compareDates';\r\nimport { IEvents } from '../model/IEvents';\r\n\r\nexport async function fetchEvents(): Promise<IEvents> {\r\n    const response = await fetch(EVENTS_CSV_URL.toString(), { cache: 'reload' });\r\n    const dataString = await response.text();\r\n    const { data } = papaparse.parse(dataString, {\r\n        header: true,\r\n    });\r\n\r\n    //console.log('data', data);\r\n\r\n    return (data as IConfigSource[])\r\n        .map((object) =>\r\n            emptyKeysAsUndefined<string | undefined>(\r\n                object,\r\n                (value) => !['', 'write', 'NULL'].includes((value || '').trim()),\r\n            ),\r\n        )\r\n        .map(decapitalize)\r\n        .filter(isNotEmpty)\r\n        .filter((t) => t['inMail'])\r\n        .map((t) => {\r\n            try {\r\n                return new Event(t);\r\n            } catch (error) {\r\n                return error.message;\r\n                //return error as Error;//Event.error(error);\r\n            }\r\n        })\r\n        .sort(compareEventsbyDate);\r\n    //.filter(isEvent);\r\n}\r\n\r\n/*\r\nTODO: Remove or use\r\nfunction isEvent(t: any): t is Event {\r\n    return t instanceof Event;\r\n}\r\n*/\r\n","import * as React from 'react';\r\nimport { Event } from '../model/Event';\r\nimport moment from 'moment';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { translateCurrency } from '../utils/translate';\r\n\r\ninterface IEventComponentProps {\r\n    event: Event;\r\n}\r\n\r\nexport function EventComponent({ event }: IEventComponentProps) {\r\n    const renderPrice = (price?: number) => {\r\n        if (isNullOrUndefined(price)) return '';\r\n        if (price === 0) return <>💸&nbsp;Zdarma</>;\r\n        return <>💸&nbsp;{`${Math.ceil(price * 100) / 100} ${translateCurrency(event.priceCurrency!)}`}</>;\r\n    };\r\n\r\n    return (\r\n        <span className={event.date < new Date() ? 'past' : ''}>\r\n            <a href={event.web.toString()} target=\"_blank\" rel=\"nofolow noopener noreferrer\">\r\n                <b>{event.name}</b>\r\n                {event.topic ? ` – ${event.topic}` : ''}\r\n            </a>\r\n            <br />\r\n            <>🌆&nbsp;{event.city}</>\r\n            &nbsp;\r\n            <>📅&nbsp;{showDate(event.date)}</>\r\n            {event.time && (\r\n                <>\r\n                    &nbsp;\r\n                    <>⏱️&nbsp;{showTime(event.time)}</>\r\n                </>\r\n            )}\r\n            &nbsp;\r\n            <>{renderPrice(event.priceAmount)}</>\r\n            <>\r\n                {event.codeName && event.codePercent && event.priceAmount && event.priceCurrency && (\r\n                    <>\r\n                        <br />A s kódem <b>{event.codeName}</b> to budeš mít o {Math.floor(event.codePercent * 100)}%\r\n                        levnější tzn. za {renderPrice(event.priceAmount * (1 - event.codePercent))}.\r\n                    </>\r\n                )}\r\n            </>\r\n            {}\r\n            <br />\r\n            <br />\r\n            {}\r\n        </span>\r\n    );\r\n}\r\n\r\nfunction showDate(date: Date): string {\r\n    try {\r\n        moment.locale('cs');\r\n        let dateString = moment(date).format('LLLL');\r\n        dateString = dateString.split('0:00')[0];\r\n        dateString = dateString.replace('listopad', 'Listopadu');\r\n        dateString = dateString.replace('prosinec', 'Prosince');\r\n        dateString = dateString.substr(0, 1).toUpperCase() + dateString.substr(1);\r\n        return dateString;\r\n    } catch (error) {\r\n        throw new Error(`Problem when parsing moment('${date}').format('LLLL');`);\r\n    }\r\n}\r\n\r\nfunction showTime(time: string): string {\r\n    try {\r\n        moment.locale('cs');\r\n        let timeString = moment('2010-10-20 ' + time).format('LT');\r\n        return timeString;\r\n    } catch (error) {\r\n        throw new Error(`Problem when parsing moment('2010-10-20 ' + '${time}').format('LT');`);\r\n    }\r\n}\r\n","import { EventPriceCurrency, EventType } from './../model/Event';\r\n\r\nexport function translateCurrency(currency: EventPriceCurrency): string {\r\n    // TODO: Hardcoded\r\n    switch (currency) {\r\n        case 'CZK' as any:\r\n        case EventPriceCurrency.CZK:\r\n            return 'Kč';\r\n        case 'EUR' as any:\r\n        case EventPriceCurrency.EUR:\r\n            return '‎€';\r\n        default:\r\n            return currency;\r\n    }\r\n}\r\n\r\nexport function translateEventType(eventType: EventType): string {\r\n    // TODO: Plular\r\n    // TODO: Hardcoded\r\n    switch (eventType) {\r\n        case EventType.HACKATHON:\r\n            return 'Hackathony';\r\n        case EventType.CONFERENCE:\r\n            return '‎Konference';\r\n        case EventType.MEETUP:\r\n            return '‎Meetupy';\r\n        case EventType.WORKSHOP:\r\n            return '‎Workshopy';\r\n    }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function LoadingComponent() {\r\n    return (\r\n        <>\r\n            <div className=\"loading\">Načítání...</div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function ErrorComponent({ children }: React.PropsWithChildren<{}>) {\r\n    return (\r\n        <>\r\n            <div className=\"error\">{children}</div>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function Form() {\r\n    // TODO: To Config\r\n    return (\r\n        <>\r\n            <form action=\"https://www.pavolhejny.com/\" method=\"post\" target=\"_blank\">\r\n                <input type=\"hidden\" name=\"sp_list\" value=\"2197\" />\r\n                <input type=\"hidden\" name=\"sendpress\" value=\"post\" />\r\n\r\n                {/*\r\n                <div className=\"group\">\r\n                    <input type=\"text\" id=\"name\" name=\"sp_firstname\" placeholder=\"Jan Novák\" />\r\n                    <label htmlFor=\"name\">Vaše jméno:</label>\r\n                    <div className=\"bar\"></div>\r\n                </div> */}\r\n\r\n                <div className=\"group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"sp_email\"\r\n                        required\r\n                        defaultValue=\"@\"\r\n                        onFocus={(event) => {\r\n                            /*console.log(event);\r\n                            const inputElement: HTMLInputElement = event.target as any;\r\n                            console.log(inputElement);\r\n                            console.log(inputElement.value);\r\n                            if (!inputElement.value) {\r\n                                inputElement.value = '@';\r\n                            }*/\r\n                        }}\r\n                    />\r\n                    <label htmlFor=\"email\">E-mail: *</label>\r\n                    <div className=\"bar\"></div>\r\n                </div>\r\n\r\n                {/* TODO: We need here some GDPR */}\r\n                <div className=\"center\">\r\n                    <input value=\"📧 Přihlásit se \" type=\"submit\" id=\"submit\" name=\"submit\" className=\"button\" />\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n","export class DateRange {\r\n    constructor(public from?: Date, public to?: Date) {}\r\n\r\n    static ALL = new DateRange();\r\n    static CURRENT_MONTH = DateRange.forMonth();\r\n    static FROM_CURRENT_MONTH = new DateRange(DateRange.CURRENT_MONTH.from);\r\n\r\n    static forMonth(currentDate = new Date()): DateRange {\r\n        const month = currentDate.getMonth();\r\n        const year = currentDate.getFullYear();\r\n\r\n        const from = new Date(year, month, 1);\r\n        const to = new Date(year, month, 31 /*TODO: Better*/);\r\n\r\n        return new DateRange(from, to);\r\n    }\r\n\r\n    isIn(date: Date) {\r\n        if (this.from && this.from > date) {\r\n            return false;\r\n        }\r\n\r\n        if (this.to && this.to < date) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { fetchEvents } from '../utils/fetchEvents';\r\nimport { EventComponent } from './EventComponent';\r\nimport { LoadingComponent } from './LoadingComponent';\r\nimport { ErrorComponent } from './ErrorComponent';\r\nimport { Event } from '../model/Event';\r\nimport { Form } from './Form';\r\nimport { translateEventType } from '../utils/translate';\r\nimport { categorizeEvents } from '../utils/categorizeEvents';\r\nimport { IEventsCategorized } from '../model/IEventsCategorized';\r\nimport { DateRange } from '../model/DateRange';\r\nimport { IEvents } from '../model/IEvents';\r\n\r\ninterface ITalksPageProps {}\r\n\r\ninterface ITalksPageState {\r\n    error: null | string;\r\n    range: DateRange;\r\n    events: null | IEvents;\r\n}\r\n\r\nexport class TalksPage extends React.Component<ITalksPageProps, ITalksPageState> {\r\n    state: ITalksPageState = {\r\n        error: null,\r\n        range: DateRange.FROM_CURRENT_MONTH,\r\n        events: null,\r\n    };\r\n\r\n    constructor(props: ITalksPageProps) {\r\n        super(props);\r\n        this.loadEvents();\r\n    }\r\n\r\n    private async loadEvents() {\r\n        try {\r\n            const events = await fetchEvents();\r\n            //console.log('events', events);\r\n            this.setState({ events });\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let categorizedEvents: null | IEventsCategorized;\r\n\r\n        if (this.state.events) {\r\n            const filteredEvents = this.state.events.filter((event) =>\r\n                event instanceof Event ? this.state.range.isIn(event.date) : true,\r\n            );\r\n\r\n            //console.log('filteredEvents', filteredEvents);\r\n            categorizedEvents = categorizeEvents(filteredEvents);\r\n        } else {\r\n            categorizedEvents = null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"content\">\r\n                    <div className=\"front black\">\r\n                        <div className=\"inner\">\r\n                            <h1>Máme přehled o nejzajímavějších událostech z IT &amp; startupového světa.</h1>\r\n                            <h2 className=\"font-light\">\r\n                                Dejte nám Vaší emailovou adresu a my Vám budeme pravidelně jednou za měsíc posílat co se\r\n                                děje:\r\n                            </h2>\r\n                            <Form />\r\n\r\n                            <h2 className=\"separator font-light\">\r\n                                A jak takový mail vypadá? Tady máte živou ukázku z rozpracovaného mailu na další měsíc:\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"letter white\">\r\n                        {/*\r\n                        TODO: Or make tabs - see bellow\r\n                        <div className=\"tab\" onClick={() => this.setState({ range: DateRange.CURRENT_MONTH })}>\r\n                            Aktuání měsíc\r\n                        </div>\r\n                        <div className=\"tab\" onClick={() => this.setState({ range: DateRange.ALL })}>\r\n                            Vše\r\n                        </div>\r\n                         */}\r\n\r\n                        <div className=\"inner\">\r\n                            {/*\r\n                            TODO: Here can be a selecotr of the months but firstly we need to add backend and better DB so it is not priority now.\r\n                            \r\n                            TODO: Or maybe like this:\r\n                            <select>\r\n                                <option>Aktuální měsíc</option>\r\n                                <option>Budoucí události</option>\r\n                                <option>Budoucí události tento měsíc</option>\r\n                                <option>Vše</option>\r\n                            </select>\r\n\r\n                            */}\r\n                            <h2>{`📅 Konference / meetupy / hackathony – co se děje z IT / Startupové akce 🌆`}</h2>\r\n                            <br />\r\n                            <br />\r\n                            Ahoj,\r\n                            <br />\r\n                            opět jsme dali dohromady seznam událostí, na které se vyplatí zajít.\r\n                            <br />\r\n                            {/*\r\n                        <p>Ve čtvrtek 7.11 se bude konat ...</p>\r\n                        <p>Ve čtvrtek 7.11 se bude konat ...</p>\r\n                        */}\r\n                            {this.state.error && (\r\n                                <ErrorComponent>\r\n                                    <pre>{this.state.error}</pre>\r\n                                </ErrorComponent>\r\n                            )}\r\n                            {!categorizedEvents ? (\r\n                                <LoadingComponent />\r\n                            ) : (\r\n                                Object.keys(categorizedEvents).map((type) => (\r\n                                    <p key={type}>\r\n                                        <h2>{translateEventType(type as any)}</h2>\r\n                                        <span>\r\n                                            {categorizedEvents![type].map((item, key) =>\r\n                                                item instanceof Event ? (\r\n                                                    <EventComponent {...{ event: item, key }} />\r\n                                                ) : (\r\n                                                    <ErrorComponent {...{ key }}>{item}</ErrorComponent>\r\n                                                ),\r\n                                            )}\r\n                                        </span>\r\n                                    </p>\r\n                                ))\r\n                            )}\r\n                            <br />\r\n                            <br />\r\n                            PS: <b>Budeme rádi za vaše návrhy a připomínky</b>, můžete <b>odpovědět rovnou na email</b>.\r\n                            <br />\r\n                            PPS: Pokud už nechcete dostat další email, klikněte sem pro jejich odhlášení.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <footer className=\"footer black\">\r\n                        <a href=\"https://www.pavolhejny/\">Pavol</a>\r\n                        &nbsp;&amp;&nbsp;\r\n                        <a href=\"https://www.linkedin.com/in/tereza-texlova/\">Tereza</a>\r\n                    </footer>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import { EventType } from './../model/Event';\r\nimport { IEvents } from '../model/IEvents';\r\nimport { Event } from '../model/Event';\r\nimport { enumToArray } from './enumToArray';\r\nimport { IEventsCategorized } from '../model/IEventsCategorized';\r\n\r\nexport function categorizeEvents(events: IEvents): IEventsCategorized {\r\n    const eventsCategorized: IEventsCategorized = {};\r\n\r\n    for (const eventType of enumToArray(EventType)) {\r\n        eventsCategorized[eventType] = [];\r\n    }\r\n\r\n    for (const eventOrError of events) {\r\n        let type: string;\r\n        if (eventOrError instanceof Event) {\r\n            type = eventOrError.type;\r\n        } else {\r\n            type = 'errors';\r\n        }\r\n\r\n        eventsCategorized[type] = eventsCategorized[type] || [];\r\n        eventsCategorized[type].push(eventOrError);\r\n    }\r\n\r\n    const eventsCategorizedFiltered: IEventsCategorized = {};\r\n\r\n    for (const eventType of Object.keys(eventsCategorized)) {\r\n        if (eventsCategorized[eventType].length > 0) {\r\n            eventsCategorizedFiltered[eventType] = eventsCategorized[eventType];\r\n        }\r\n    }\r\n\r\n    return eventsCategorizedFiltered;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { TalksPage } from './components/TalksPage';\r\n\r\nReactDOM.render(<TalksPage />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}