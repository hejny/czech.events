{"version":3,"sources":["model/database/NewsletterContent.ts","model/database/EventCode.ts","model/database/Event.ts","model/database/Subscriber.ts","utils/constructObjectFromJSON.ts","api/ApiClient.ts","components/PageDiv.tsx","components/AboutPage.tsx","utils/array.ts","components/Partners.tsx","model/DateRange.ts","components/ErrorComponent.tsx","components/Form.tsx","components/LoadingComponent.tsx","utils/categorizeEvents.ts","utils/enumToArray.ts","utils/compareDates.ts","components/NewsletterContentsComponent.tsx","utils/eventTypeToNewsletterContentPosition.ts","utils/translate.ts","components/EventPrice.tsx","components/EventCodeParagraph.tsx","components/EventSummary.tsx","components/CalendarLink.tsx","utils/capitalizeFirstLetter.tsx","components/EventDateComponent.tsx","components/EventTimeComponent.tsx","components/getCharForCity.tsx","components/EventTags.tsx","components/EventComponent.tsx","components/NewsletterComponent.tsx","components/TalksPageEmail.tsx","utils/createNewsletter.tsx","components/TalksPage.tsx","serviceWorker.ts","EventsApp.tsx","index.tsx"],"names":["NewsletterContentPosition","EventCode","Index","Entity","PrimaryGeneratedColumn","type","name","Column","enum","length","precision","scale","nullable","ManyToOne","Event","event","eventCodes","onDelete","onUpdate","JoinColumn","referencedColumnName","EventType","EventPriceCurrency","EventVisibility","NewsletterContent","comment","newsletterContents","unique","default","OneToMany","eventCode","eager","newsletterContent","this","days","parseInt","split","trim","year","month","day","date","Date","isNaN","getDate","time","map","x","hh","mm","setHours","setDate","Subscriber","constructObjectFromJSON","Class","data","instance","Object","assign","ApiClientContext","React","ApiClient","apiUrl","get","encodeURIComponent","serializeId","subscriber","post","path","fetch","response","json","responseData","method","headers","Accept","body","JSON","stringify","PageDiv","styled","div","AboutPage","props","AboutPageDiv","className","src","url","selfUrl","href","alt","download","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","joinArray","delimiter","delimitedArray","item","push","Partners","PartnersDiv","logoUrl","link","target","rel","title","style","backgroundImage","to","DateRange","from","beginConstant","endConstant","fromConstant","constant","includes","fromConstants","now","forMonth","getFullYear","getMonth","Error","currentDate","ErrorComponent","children","ErrorDiv","ALL","CURRENT_MONTH","FROM_CURRENT_MONTH","form","Form","FormElement","onSubmit","a","preventDefault","formData","FormData","alert","email","fullname","source","window","location","toString","apiClient","postSubscriber","result","console","log","reset","message","defaultValue","htmlFor","required","id","defaultChecked","value","LoadingComponent","LoadingDiv","categorizeEvents","events","enumerable","eventsCategorized","keys","key","filter","v","eventOrError","eventsCategorizedFiltered","eventType","compareEventsbyDate","event1","event2","date1","date2","delta","error","warn","compareDates","dateToCompare","NewsletterContentsComponent","position","sort","b","order","dangerouslySetInnerHTML","__html","html","join","SUBJECT","eventTypeToNewsletterContentPosition","CONFERENCE","HEAD_CONFERENCES","MEETUP","HEAD_MEETUPS","WORKSHOP","HEAD_WORKSHOPS","HACKATHON","HEAD_HACKATHONS","translateCurrency","currency","CZK","EUR","translateEventType","EventPrice","price","isNullOrUndefined","ceil","priceCurrency","EventCodeParagraph","showCode","verbose","code","EventSummary","visibility","FEATURED","web","topic","CalendarLink","CalendarA","createEventCalendarUrl","capitalizeFirstLetter","word","substr","toUpperCase","EventDateComponent","monthString","moment","format","replace","locale","dateString","EventTimeComponent","timeString","getCharForCity","city","EventTags","getEventTags","tags","canceled","EventTagSpan","online","span","EventComponent","EventSpan","NewsletterComponent","newsletter","categorizedEvents","TalksPageEmail","range","filteredEvents","isIn","createNewsletter","HEAD","BOTTOM","OPTIONS","desc","TalksPage","state","load","getEvents","setState","onChange","Boolean","hostname","match","EventsApp","rootElement","history","run","createHashHistory","ReactDOM","render","Provider","exact","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b3a1e2e.chunk.js","sourcesContent":["import { Column, Entity, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\r\n\r\nimport { Event } from './Event';\r\n\r\nexport enum NewsletterContentPosition {\r\n    SUBJECT = 'SUBJECT',\r\n    HEAD = 'HEAD',\r\n    HEAD_CONFERENCES = 'HEAD_CONFERENCES',\r\n    HEAD_MEETUPS = 'HEAD_MEETUPS',\r\n    HEAD_WORKSHOPS = 'HEAD_WORKSHOPS',\r\n    HEAD_HACKATHONS = 'HEAD_HACKATHONS',\r\n    BOTTOM = 'BOTTOM',\r\n}\r\n\r\n@Index('position', ['position'], {})\r\n@Entity('NewsletterContent')\r\nexport class NewsletterContent {\r\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\r\n    id: number;\r\n\r\n    @Column('int', { name: 'event_id', nullable: true, comment: 'Is the paragraph connected to some one event?' })\r\n    eventId: number;\r\n\r\n    @Column('enum', {\r\n        name: 'position',\r\n        enum: NewsletterContentPosition,\r\n    })\r\n    position: NewsletterContentPosition;\r\n\r\n    @Column('int', { name: 'order', nullable: true })\r\n    order: number | null;\r\n\r\n    @Column('text', { name: 'html' })\r\n    html: string;\r\n\r\n    @Column('text', { name: 'note', nullable: true })\r\n    note: string | null;\r\n\r\n    @ManyToOne(() => Event, (event) => event.newsletterContents, { onDelete: 'RESTRICT', onUpdate: 'RESTRICT' })\r\n    @JoinColumn([{ name: 'event_id', referencedColumnName: 'id' }])\r\n    event: Event;\r\n}\r\n","import { Column, Entity, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\r\nimport { Event } from './Event';\r\n\r\n@Index('event_id', ['eventId'], {})\r\n@Index('type', ['type'], {})\r\n@Index('value', ['value'], {})\r\n@Entity('EventCode')\r\nexport class EventCode {\r\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\r\n    id: number;\r\n\r\n    @Column('int', { name: 'event_id' })\r\n    eventId: number;\r\n\r\n    @Column('enum', { name: 'type', enum: ['DISCOUNT_PERCENT'] })\r\n    type: 'DISCOUNT_PERCENT';\r\n\r\n    @Column('varchar', { name: 'code', length: 200 })\r\n    code: string;\r\n\r\n    @Column('float', { name: 'value', precision: 10, scale: 2 })\r\n    value: number;\r\n\r\n    @Column('text', { name: 'note', nullable: true })\r\n    note: string | null;\r\n\r\n    @ManyToOne(() => Event, (event) => event.eventCodes, { onDelete: 'RESTRICT', onUpdate: 'RESTRICT' })\r\n    @JoinColumn([{ name: 'event_id', referencedColumnName: 'id' }])\r\n    event: Event;\r\n}\r\n","import { Column, Entity, Index, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\r\nimport { EventCode } from './EventCode';\r\nimport { NewsletterContent } from './NewsletterContent';\r\n\r\nexport enum EventType {\r\n    CONFERENCE = 'CONFERENCE',\r\n    MEETUP = 'MEETUP',\r\n    WORKSHOP = 'WORKSHOP',\r\n    HACKATHON = 'HACKATHON',\r\n}\r\n\r\nexport enum EventPriceCurrency {\r\n    CZK = 'CZK',\r\n    USD = 'USD',\r\n    EUR = 'EUR',\r\n}\r\n\r\nexport enum EventVisibility {\r\n    PENDING = 'PENDING',\r\n    VISIBLE = 'VISIBLE',\r\n    HIDDEN = 'HIDDEN',\r\n    FEATURED = 'FEATURED',\r\n}\r\n\r\n@Index('serializeId', ['serializeId'], { unique: true })\r\n@Index('name_topic', ['name', 'topic'], { unique: true })\r\n@Index('type', ['type'], {})\r\n@Index('city', ['city'], {})\r\n@Index('year', ['year'], {})\r\n@Index('month', ['month'], {})\r\n@Index('time', ['time'], {})\r\n@Index('price', ['price'], {})\r\n@Index('priceCurrency', ['priceCurrency'], {})\r\n@Index('visibility', ['visibility'], {})\r\n@Index('created', ['created'], {})\r\n@Index('updated', ['updated'], {})\r\n@Index('canceled', ['canceled'], {})\r\n@Index('online', ['online'], {})\r\n@Entity('Event')\r\nexport class Event {\r\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\r\n    id: number;\r\n\r\n    @Column('varchar', { name: 'serializeId', unique: true, length: 1000 }) // TODO: This should be named just URL\r\n    serializeId: string;\r\n\r\n    @Column('varchar', { name: 'name', length: 300 })\r\n    name: string;\r\n\r\n    @Column('varchar', { name: 'topic', nullable: true, length: 500 })\r\n    topic: string | null;\r\n\r\n    @Column('enum', {\r\n        name: 'type',\r\n        enum: EventType,\r\n    })\r\n    type: EventType;\r\n\r\n    @Column('varchar', { name: 'web', nullable: true, length: 1000 })\r\n    web: string | null;\r\n\r\n    @Column('varchar', { name: 'city', nullable: true, length: 200 })\r\n    city: string | null;\r\n\r\n    @Column('year', { name: 'year', nullable: true })\r\n    year: number | null;\r\n\r\n    @Column('int', { name: 'month', nullable: true })\r\n    month: number | null;\r\n\r\n    @Column('varchar', { name: 'days', nullable: true, length: 5 })\r\n    days: string | null;\r\n\r\n    @Column('varchar', { name: 'time', nullable: true, length: 8 })\r\n    time: string | null;\r\n\r\n    @Column('int', { name: 'price', nullable: true })\r\n    price: number | null;\r\n\r\n    @Column('enum', {\r\n        name: 'priceCurrency',\r\n        nullable: true,\r\n        enum: EventPriceCurrency,\r\n    })\r\n    priceCurrency: EventPriceCurrency | null;\r\n\r\n    @Column('enum', {\r\n        name: 'visibility',\r\n        enum: EventVisibility,\r\n        default: () => \"'PENDING'\",\r\n    })\r\n    visibility: EventVisibility;\r\n\r\n    @Column('tinyint', { name: 'canceled', nullable: true })\r\n    canceled: number | null;\r\n\r\n    @Column('tinyint', { name: 'online', nullable: true })\r\n    online: number | null;\r\n\r\n    @Column('text', { name: 'note', nullable: true })\r\n    note: string | null;\r\n\r\n    @Column('timestamp', { name: 'created', default: () => 'CURRENT_TIMESTAMP' })\r\n    created: Date;\r\n\r\n    @Column('timestamp', { name: 'updated', default: () => 'CURRENT_TIMESTAMP' })\r\n    updated: Date;\r\n\r\n    @OneToMany(() => EventCode, (eventCode) => eventCode.event, { eager: true })\r\n    eventCodes: EventCode[];\r\n\r\n    @OneToMany(() => NewsletterContent, (newsletterContent) => newsletterContent.event, { eager: true })\r\n    newsletterContents: NewsletterContent[];\r\n\r\n    get day(): number | null {\r\n        if (this.days) {\r\n            return parseInt(this.days.split('-')[0].trim());\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get date(): Date | null {\r\n        if (this.year && this.month && this.day) {\r\n            const date = new Date(this.year, this.month - 1, this.day);\r\n\r\n            if (!isNaN(date.getDate())) {\r\n                const [hh, mm] = (this.time || '00:00').split(':').map((x) => parseInt(x, 10));\r\n                //console.log(hh, mm);\r\n                date.setHours(hh, mm);\r\n\r\n                return date;\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Purpose of this method is to provide date only for comparing functions - so it can be wrong (for example can be shifted by a day) but roughly OK and everytime defined\r\n     * compared to Event.date which is everytime precise but can be undefined\r\n     * This getter is usefull when we have only a month and year of an event but not a precise day.\r\n     */\r\n    get dateToCompare(): Date {\r\n        if (this.date) {\r\n            return this.date;\r\n        } else if (this.year && this.month) {\r\n            const date = new Date(this.year, this.month - 1, 25 /*Some late day in the month*/);\r\n            return date;\r\n        } else {\r\n            const date = new Date();\r\n            date.setDate(date.getDate() + 1000 /*TODO: Some big constant*/);\r\n            return date;\r\n        }\r\n    }\r\n\r\n    /*static error(error: Error):Event{\r\n    return new Event();\r\n    }*/\r\n}\r\n","import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\r\n\r\n@Index('email', ['email'], {})\r\n@Index('created', ['created'], {})\r\n@Index('active', ['active'], {})\r\n@Entity('Subscriber')\r\nexport class Subscriber {\r\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\r\n    id: number;\r\n\r\n    @Column('varchar', { name: 'email', length: 1000 })\r\n    email: string;\r\n\r\n    @Column('varchar', { name: 'fullname', nullable: true, length: 1000 })\r\n    fullname: string | null;\r\n\r\n    @Column('varchar', { name: 'source', nullable: true, length: 2000 })\r\n    source: string | null;\r\n\r\n    @Column('timestamp', { name: 'created', nullable: true })\r\n    created: Date | null;\r\n\r\n    @Column('smallint', { name: 'active', nullable: true, default: () => \"'1'\" })\r\n    active: number | null;\r\n}\r\n","type Instantiable = { new (...args: any[]): any };\r\n\r\n// TODO: Create AbscractApiClient library\r\nexport function constructObjectFromJSON<TClass extends Instantiable>(\r\n    Class: TClass,\r\n    data: Partial<InstanceType<TClass>>,\r\n) {\r\n    const instance = new Class();\r\n    Object.assign(instance, data);\r\n    return instance;\r\n}\r\n","import * as React from 'react';\r\nimport { Event } from '../model/database/Event';\r\nimport { Subscriber } from '../model/database/Subscriber';\r\nimport { constructObjectFromJSON } from '../utils/constructObjectFromJSON';\r\n\r\nexport const ApiClientContext = React.createContext<ApiClient | null>(null);\r\n\r\nexport class ApiClient {\r\n    public constructor(private apiUrl: string) {}\r\n\r\n    public async getAbout() {}\r\n\r\n    public async getEvents(): Promise<Event[]> {\r\n        const data = await this.get(`/events`);\r\n        return data.map((data: any) => constructObjectFromJSON(Event, data));\r\n    }\r\n\r\n    public createEventCalendarUrl(event: Event): string {\r\n        return `${this.apiUrl}/export/ical/${encodeURIComponent(event.name)}.ics?serializeId=${encodeURIComponent(\r\n            event.serializeId,\r\n        )}`;\r\n    }\r\n\r\n    public async postSubscriber(subscriber: Subscriber): Promise<Subscriber> {\r\n        const data = await this.post(\r\n            `/subscribers`,\r\n            subscriber /* TODO: Should be subscriber data directly in request body or should it be wrapped in {subscriber:{...}} */,\r\n        );\r\n        return constructObjectFromJSON(Subscriber, data);\r\n    }\r\n\r\n    // TODO: Create AbscractApiClient library\r\n    // TODO: Generically typed\r\n    private async get(path: string /*TODO: Add option for query*/) {\r\n        const response = await fetch(`${this.apiUrl}${path}`);\r\n        const responseData = await response.json();\r\n        return responseData;\r\n    }\r\n\r\n    // TODO: Create AbscractApiClient library\r\n    // TODO: Generically typed\r\n    private async post(path: string, data: {} /*TODO: Maybe add option for query*/) {\r\n        const response = await fetch(`${this.apiUrl}${path}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n        const responseData = await response.json();\r\n        return responseData;\r\n    }\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const PageDiv = styled.div`\r\n    max-width: 1200px;\r\n    display: inline-block;\r\n    text-align: left;\r\n    overflow: visible;\r\n\r\n    .white {\r\n        /*We are using here standart Gmail font*/\r\n        font-family: Arial, Helvetica, sans-serif, 'Montserrat', serif;\r\n    }\r\n\r\n    .white a {\r\n        color: black;\r\n    }\r\n\r\n    .front {\r\n        /*/border: 1px dotted red; /**/\r\n        width: 100%;\r\n        max-width: 850px;\r\n    }\r\n\r\n    .front .inner {\r\n        padding: 10vh;\r\n        padding-bottom: 0;\r\n    }\r\n\r\n    .front .separator {\r\n        /*margin-top: 10vh;*/\r\n    }\r\n\r\n    .black {\r\n        font-family: 'Montserrat', serif;\r\n        /*font-family: 'Oswald', serif;*/\r\n    }\r\n\r\n    .black h1 {\r\n        color: rgb(255, 255, 255);\r\n        text-align: left;\r\n        font-size: 35px;\r\n    }\r\n\r\n    .black p {\r\n        font-size: 16px;\r\n    }\r\n\r\n    .black .font-light {\r\n        font-weight: 100;\r\n    }\r\n\r\n    .black h2 {\r\n        color: rgb(255, 255, 255);\r\n        text-align: left;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .black * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    .black a:link {\r\n        color: white;\r\n    }\r\n\r\n    .black a:visited {\r\n        color: rgb(211, 211, 211);\r\n    }\r\n\r\n    .black a:hover {\r\n        color: hotpink;\r\n    }\r\n\r\n    .black .group {\r\n        width: 100%;\r\n        height: 90px;\r\n        overflow: hidden;\r\n        position: relative;\r\n    }\r\n    .black .group.checkbox {\r\n        width: 100%;\r\n        height: 40px;\r\n    }\r\n\r\n    .black .bar {\r\n        background: rgba(255, 255, 255, 0.5);\r\n        content: '';\r\n        max-width: 500px;\r\n        height: 2px;\r\n        transition: 0.3s ease;\r\n        position: relative;\r\n    }\r\n    .black .bar:before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 150%;\r\n        background: #01ccbf;\r\n        transform: translateX(-100%);\r\n    }\r\n\r\n    .black ::selection {\r\n        background: rgba(33, 150, 243, 0.3);\r\n    }\r\n\r\n    .line {\r\n        line-height: 32px;\r\n    }\r\n\r\n    .option-in-text {\r\n        background: none;\r\n        color: white;\r\n        margin-left: 0.35em;\r\n        outline: none;\r\n        border: 2px solid rgba(255, 255, 255, 0.5);\r\n        font-weight: 100;\r\n        font-size: 20px;\r\n        font-family: 'Montserrat', serif;\r\n    }\r\n\r\n    .option-in-text option {\r\n        background: white;\r\n        color: black;\r\n    }\r\n\r\n    .letter {\r\n        margin: 5vh;\r\n        padding: 5vh;\r\n        background-color: white;\r\n        border-radius: 50px;\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { PageDiv } from './PageDiv';\r\ninterface IAboutPageProps {\r\n    selfUrl: string;\r\n}\r\n\r\nexport function AboutPage(props: IAboutPageProps) {\r\n    return (\r\n        <PageDiv>\r\n            <AboutPageDiv>\r\n                <div className=\"front black\">\r\n                    <div className=\"inner\">\r\n                        {/* <h1>Czech.events</h1> */}\r\n\r\n                        {[\r\n                            {\r\n                                name: 'Tmavá verze',\r\n                                src: 'czech.events.black-logo.png',\r\n                            },\r\n\r\n                            {\r\n                                name: 'Světlá verze',\r\n                                src: 'czech.events.white-logo.png',\r\n                            },\r\n                        ].map(({ name, src }) => {\r\n                            const url = `${props.selfUrl}/design/logos/${src}`;\r\n                            return (\r\n                                <div key={src} className=\"logo\">\r\n                                    <a href={url}>\r\n                                        <img src={url} alt=\"Czech.events logo\" />\r\n                                    </a>\r\n                                    {`${name} `}\r\n                                    <a href={url} download>\r\n                                        (Stáhnout)\r\n                                    </a>\r\n                                    <pre>\r\n                                        {`                                     \r\n<a href=\"https://czech.events/\">\r\n    <img src=\"${url}\" alt=\"Czech.events logo\" width=\"200\" />\r\n</a>`.trim()}\r\n                                    </pre>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </AboutPageDiv>\r\n        </PageDiv>\r\n    );\r\n}\r\n\r\nexport const AboutPageDiv = styled.div`\r\n    .logo {\r\n        margin: 20px;\r\n        border-radius: 5px;\r\n        display: inline-block;\r\n        width: 200px;\r\n        height: 200px;\r\n        color: white;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n\r\n    .logo img {\r\n        display: block;\r\n        max-width: 200px;\r\n        max-height: 200px;\r\n    }\r\n\r\n    .logo pre {\r\n        display: block;\r\n        width: 200px;\r\n        overflow-x: scroll;\r\n    }\r\n`;\r\n","export function shuffleArray<T>(array: T[]): T[] {\r\n    array = [...array];\r\n    let currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nexport function joinArray<T>(array: T[], delimiter: T): T[] {\r\n    const delimitedArray: T[] = [];\r\n\r\n    for (const item of array) {\r\n        if (delimitedArray.length) {\r\n            delimitedArray.push(delimiter);\r\n        }\r\n        delimitedArray.push(item);\r\n    }\r\n\r\n    return delimitedArray;\r\n}\r\n","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { shuffleArray } from '../utils/array';\r\n\r\ninterface IPartnersProps {\r\n    selfUrl: string;\r\n}\r\n\r\nexport function Partners(props: IPartnersProps) {\r\n    return (\r\n        <>\r\n            <PartnersDiv className=\"partners\">\r\n                <h2>Mediální partneři</h2>\r\n                {shuffleArray([\r\n                    // TODO: To some other file or even to DB\r\n                    {\r\n                        name: 'Startup Weekend Prague',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/startup-weekend-prague.png`,\r\n                        link: 'https://www.facebook.com/swprague/',\r\n                    },\r\n\r\n                    {\r\n                        name: 'Startup Weekend Bratislava',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/startup-weekend-bratislava.png`,\r\n                        link: 'https://www.facebook.com/StartupWeekendBratislava/',\r\n                    },\r\n                    {\r\n                        name: 'Undout Sleep Box',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/undout.png`,\r\n                        link: 'https://undout.com/',\r\n                    },\r\n                    {\r\n                        name: 'HackPrague',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/hackprague.svg`,\r\n                        link: 'https://hackprague.com/',\r\n                    },\r\n                    {\r\n                        name: 'StartupBox',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/startupbox.png`,\r\n                        link: 'https://www.startupbox.cz/',\r\n                    },\r\n                    /*\r\n                    TODO:\r\n                    {\r\n                        name: 'CEEHACKS',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/ceehacks.png`,\r\n                        link: 'https://www.ceehacks.com/',\r\n                    },\r\n                    {\r\n                        name: 'TechHeaven',\r\n                        logoUrl: `${props.selfUrl}/design/logos/partners/techheaven.svg`,\r\n                        link: 'https://techheaven.org/',\r\n                    },*/\r\n                    // TODO: CzechFuture tech\r\n                    // TODO: Random shuffle\r\n                ]).map(({ name, logoUrl, link }) => {\r\n                    return (\r\n                        <a\r\n                            href={`${link}?utm_source=czech.events&amp;utm_medium=referral&amp;utm_campaign=partners`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            title={name}\r\n                        >\r\n                            <div key={name} className=\"logo\" style={{ backgroundImage: `url(${logoUrl})` }}>\r\n                                {/* <img src={logoUrl} title={name} alt={`${name} logo`} /> */}\r\n                                {/*`${name} `*/}\r\n                            </div>\r\n                        </a>\r\n                    );\r\n                })}\r\n\r\n                <Link to=\"/about\" className=\"our-logos\">\r\n                    O nás a loga Czech.events\r\n                </Link>\r\n            </PartnersDiv>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const PartnersDiv = styled.div`\r\n    text-align: center;\r\n    font-family: Arial, Helvetica, sans-serif, 'Montserrat', serif;\r\n    color: rgb(212, 212, 212);\r\n    padding: 2em;\r\n    /* padding-top: 0; */\r\n\r\n    h2 {\r\n        font-size: 1.5rem;\r\n        font-family: 'Montserrat', serif;\r\n    }\r\n\r\n    .logo {\r\n        margin: 20px;\r\n        border-radius: 5px;\r\n        display: inline-block;\r\n        width: 100px;\r\n        height: 100px;\r\n        color: white;\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n\r\n    .our-logos {\r\n        font-size: 0.8em;\r\n        color: white;\r\n        display: block;\r\n    }\r\n`;\r\n","export class DateRange {\r\n    constructor(public from?: Date, public to?: Date) {}\r\n\r\n    private static fromConstants(beginConstant: RangeConstantSimple, endConstant: RangeConstantSimple): DateRange {\r\n        return new DateRange(DateRange.fromConstant(beginConstant).from, DateRange.fromConstant(endConstant).to);\r\n    }\r\n\r\n    static fromConstant(constant: RangeConstant): DateRange {\r\n        if (constant.includes('-')) {\r\n            const [from, to] = constant.split('-');\r\n            return DateRange.fromConstants(from as RangeConstantSimple, to as RangeConstantSimple);\r\n        }\r\n\r\n        const now = new Date();\r\n\r\n        switch (constant) {\r\n            case 'NOW':\r\n                return new DateRange(now, now);\r\n\r\n            case 'CURRENT_MONTH':\r\n                return DateRange.forMonth(now);\r\n\r\n            case 'NEXT_MONTH':\r\n                return DateRange.forMonth(new Date(now.getFullYear(), now.getMonth() + 1, 1));\r\n\r\n            // TODO: Maybe better name for NEXT_NEXT_MONTH\r\n            // TODO: DRY\r\n            case 'NEXT_NEXT_MONTH':\r\n                return DateRange.forMonth(new Date(now.getFullYear(), now.getMonth() + 2, 1));\r\n\r\n            case 'INFINITY':\r\n                return new DateRange();\r\n\r\n            default:\r\n                throw new Error(\r\n                    `Unknown range constant \"${constant}\". Please use NOW, CURRENT_MONTH, NEXT_MONTH, NEXT_NEXT_MONTH or INFINITY.`,\r\n                );\r\n        }\r\n    }\r\n\r\n    static forMonth(currentDate = new Date()): DateRange {\r\n        const month = currentDate.getMonth();\r\n        const year = currentDate.getFullYear();\r\n\r\n        const from = new Date(year, month, 1);\r\n        const to = new Date(year, month + 1, -1);\r\n\r\n        return new DateRange(from, to);\r\n    }\r\n\r\n    // TODO: Deprecated due to fromConstants, fromConstant\r\n    static ALL = new DateRange();\r\n    static CURRENT_MONTH = DateRange.forMonth();\r\n    static FROM_CURRENT_MONTH = new DateRange(DateRange.CURRENT_MONTH.from);\r\n\r\n    isIn(date: Date) {\r\n        if (this.from && this.from > date) {\r\n            return false;\r\n        }\r\n\r\n        if (this.to && this.to < date) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\nexport type RangeConstantSimple = 'NOW' | 'CURRENT_MONTH' | 'NEXT_MONTH' | 'NEXT_NEXT_MONTH' | 'INFINITY';\r\nexport type RangeConstant =\r\n    | 'NOW'\r\n    | 'CURRENT_MONTH'\r\n    | 'NEXT_MONTH'\r\n    | 'NEXT_NEXT_MONTH'\r\n    | 'INFINITY'\r\n    | `${RangeConstantSimple}-${RangeConstantSimple}`;\r\n\r\n/*/\r\nfor (const constant of ['NOW', 'CURRENT_MONTH', 'NEXT_MONTH', 'NEXT_NEXT_MONTH', 'INFINITY'] as RangeConstant[]) {\r\n    console.log(constant, DateRange.fromConstant(constant));\r\n}\r\n/**/\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// TODO: Deprecated remove\r\nexport function ErrorComponent({ children }: React.PropsWithChildren<{}>) {\r\n    return <ErrorDiv>{children}</ErrorDiv>;\r\n}\r\n\r\nconst ErrorDiv = styled.form`\r\n    background-color: #f00;\r\n    color: #fff;\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ApiClient } from '../api/ApiClient';\r\nimport { Subscriber } from '../model/database/Subscriber';\r\nimport { constructObjectFromJSON } from '../utils/constructObjectFromJSON';\r\n\r\ninterface IFormProps {\r\n    apiClient: ApiClient;\r\n}\r\n\r\nexport function Form(props: IFormProps) {\r\n    // TODO: To Config\r\n    return (\r\n        <FormElement\r\n            onSubmit={async (event) => {\r\n                event.preventDefault();\r\n                const form = event.target as HTMLFormElement;\r\n                const formData = new FormData(form);\r\n\r\n                if (!formData.get('gdpr')) {\r\n                    alert(`Potřebujeme od Vás zaškrtnout souhlas se zpracováním osobních údajů.`);\r\n                    return;\r\n                }\r\n\r\n                const subscriber = constructObjectFromJSON(Subscriber, {\r\n                    email: formData.get('email') as string,\r\n                    fullname: formData.get('fullname') as string,\r\n                    source: window.location.toString(),\r\n                });\r\n\r\n                try {\r\n                    const result = await props.apiClient.postSubscriber(subscriber);\r\n\r\n                    console.log('result', result);\r\n\r\n                    form.reset();\r\n                    alert(`Děkujeme, můžete se těšit na další email!`);\r\n                } catch (error) {\r\n                    alert(error.message /*TODO: Better*/);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"group\">\r\n                <input type=\"text\" name=\"fullname\" className=\"field\" defaultValue=\"\" />\r\n                <label htmlFor=\"name\">Vaše jméno:</label>\r\n                <div className=\"bar\"></div>\r\n            </div>\r\n\r\n            <div className=\"group\">\r\n                <input type=\"email\" name=\"email\" defaultValue=\"@\" required className=\"field\" />\r\n                <label htmlFor=\"email\">E-mail: *</label>\r\n                <div className=\"bar\"></div>\r\n            </div>\r\n\r\n            <div className=\"group checkbox gdpr\">\r\n                <input type=\"checkbox\" name=\"gdpr\" id=\"gdpr\" defaultChecked={false} />\r\n                <label htmlFor=\"gdpr\">Souhlasím se zpracováním osobních údajů</label>\r\n            </div>\r\n\r\n            {/* TODO: We need here some GDPR */}\r\n            <div className=\"center\">\r\n                <input value=\"Přihlásit se \" type=\"submit\" id=\"submit\" name=\"submit\" className=\"button\" />\r\n            </div>\r\n        </FormElement>\r\n    );\r\n}\r\n\r\nconst FormElement = styled.form`\r\n    padding: 40px 0;\r\n    max-width: 450px;\r\n\r\n    label {\r\n        position: absolute;\r\n        top: 20px;\r\n        color: rgba(255, 255, 255, 0.5);\r\n        font: 400 16px Montserrat;\r\n        cursor: text;\r\n        transition: 0.25s ease;\r\n    }\r\n\r\n    .gdpr label {\r\n        top: 2px;\r\n        padding-left: 8px;\r\n    }\r\n\r\n    .field {\r\n        display: block;\r\n        width: 100%;\r\n        padding-top: 42px;\r\n        border: none;\r\n        border-radius: 0;\r\n        color: white;\r\n        background: transparent;\r\n        font-size: 20px;\r\n        transition: 0.3s ease;\r\n    }\r\n    .field:valid ~ label {\r\n        top: 0;\r\n        font: 700 16px;\r\n        transition: 0.3s ease;\r\n    }\r\n    .field:focus {\r\n        outline: none;\r\n    }\r\n    .field:focus ~ label {\r\n        top: 0;\r\n        font: 700 16px Montserrat;\r\n        color: #01ccbf;\r\n        transition: 0.3s ease;\r\n        transform: translateX(0);\r\n    }\r\n    .field:focus ~ .bar:before {\r\n        transform: translateX(0);\r\n    }\r\n    .field:-webkit-autofill {\r\n        -webkit-box-shadow: 0 0 0px 1000px #333 inset;\r\n        -webkit-text-fill-color: white !important;\r\n    }\r\n\r\n    .button {\r\n        display: block;\r\n        width: 100%;\r\n        padding-top: 42px;\r\n        border: none;\r\n        border-radius: 0;\r\n        color: white;\r\n        background: transparent;\r\n        font-size: 20px;\r\n        transition: 0.3s ease;\r\n\r\n        text-decoration: none;\r\n        font: 100 18px Montserrat;\r\n        padding: 16px 20px;\r\n        color: white;\r\n        cursor: pointer;\r\n        display: inline-block;\r\n        background-color: transparent;\r\n        border-radius: 6px;\r\n        /* border: 1px solid #ffffff55; */\r\n        background-color: #ffffff11;\r\n    }\r\n\r\n    .button:hover {\r\n        background-color: white;\r\n        color: black;\r\n    }\r\n\r\n    .center {\r\n        text-align: center;\r\n        margin: 0 auto;\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport function LoadingComponent() {\r\n    return <LoadingDiv>Načítání...</LoadingDiv>;\r\n}\r\n\r\nconst LoadingDiv = styled.form`\r\n    background-color: #ccc;\r\n    color: #fff;\r\n`;\r\n","import { EventType } from './../model/database/Event';\r\nimport { Event } from '../model/database/Event';\r\nimport { enumToArray } from './enumToArray';\r\nimport { IEventsCategorized } from '../model/IEventsCategorized';\r\n\r\nexport function categorizeEvents(events: Event[]): IEventsCategorized {\r\n    const eventsCategorized: IEventsCategorized = {};\r\n\r\n    for (const eventType of enumToArray(EventType)) {\r\n        eventsCategorized[eventType] = [];\r\n    }\r\n\r\n    for (const eventOrError of events) {\r\n        let type: string;\r\n        if (eventOrError instanceof Event) {\r\n            type = eventOrError.type;\r\n        } else {\r\n            type = 'errors';\r\n        }\r\n\r\n        eventsCategorized[type] = eventsCategorized[type] || [];\r\n        eventsCategorized[type].push(eventOrError);\r\n    }\r\n\r\n    const eventsCategorizedFiltered: IEventsCategorized = {};\r\n\r\n    for (const eventType of Object.keys(eventsCategorized)) {\r\n        if (eventsCategorized[eventType].length > 0) {\r\n            eventsCategorizedFiltered[eventType] = eventsCategorized[eventType];\r\n        }\r\n    }\r\n\r\n    return eventsCategorizedFiltered;\r\n}\r\n","export function enumToArray(enumerable: any): string[] {\r\n    let enumMembers: any[] = Object.keys(enumerable).map((key) => enumerable[key]);\r\n    let enumValues: string[] = enumMembers.filter((v) => typeof v === 'string');\r\n    return enumValues;\r\n}\r\n","import { Event } from '../model/database/Event';\r\n\r\ntype CompareResult = 1 | -1 | 0;\r\n\r\nexport function compareEventsbyDate(event1?: Event, event2?: Event): CompareResult {\r\n    return compareDates(event1.dateToCompare, event2.dateToCompare);\r\n}\r\n\r\nexport function compareDates(date1: Date, date2: Date): CompareResult {\r\n    try {\r\n        const delta = ((new Date(date2) as any) as number) - ((new Date(date1) as any) as number);\r\n\r\n        if (delta > 0) {\r\n            return -1;\r\n        } else if (delta < 0) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    } catch (error) {\r\n        console.warn(error);\r\n        return -1;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { NewsletterContent, NewsletterContentPosition } from '../model/database/NewsletterContent';\r\n\r\ninterface INewsletterContentsComponentProps {\r\n    position: NewsletterContentPosition;\r\n    newsletterContents: NewsletterContent[];\r\n}\r\n\r\nexport function NewsletterContentsComponent({ newsletterContents, position }: INewsletterContentsComponentProps) {\r\n    return (\r\n        <>\r\n            {newsletterContents\r\n                .filter((newsletterContent) => newsletterContent.position === position)\r\n                .sort((a, b) => (a.order > b.order ? 1 : -1) /* TODO: Correct? */)\r\n                .map((newsletterContent, key) => (\r\n                    <div key={key}>\r\n                        <span dangerouslySetInnerHTML={{ __html: newsletterContent.html.split('\\n').join('<br/>') }} />\r\n                        {position !== NewsletterContentPosition.SUBJECT && (\r\n                            <>\r\n                                <br />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n        </>\r\n    );\r\n}\r\n","import { NewsletterContentPosition } from '../model/database/NewsletterContent';\r\nimport { EventType } from '../model/database/Event';\r\n\r\nexport function eventTypeToNewsletterContentPosition(eventType: EventType): NewsletterContentPosition {\r\n    switch (eventType) {\r\n        case EventType.CONFERENCE:\r\n            return NewsletterContentPosition.HEAD_CONFERENCES;\r\n        case EventType.MEETUP:\r\n            return NewsletterContentPosition.HEAD_MEETUPS;\r\n        case EventType.WORKSHOP:\r\n            return NewsletterContentPosition.HEAD_WORKSHOPS;\r\n        case EventType.HACKATHON:\r\n            return NewsletterContentPosition.HEAD_HACKATHONS;\r\n        default:\r\n            throw new Error(`Can not convert \"${eventType}\" into NewsletterContentPosition.`);\r\n    }\r\n}\r\n","import { EventType, EventPriceCurrency } from './../model/database/Event';\r\n\r\nexport function translateCurrency(currency: EventPriceCurrency): string {\r\n    // TODO: Hardcoded\r\n    switch (currency) {\r\n        case 'CZK' as any:\r\n        case EventPriceCurrency.CZK:\r\n            return 'Kč';\r\n        case 'EUR' as any:\r\n        case EventPriceCurrency.EUR:\r\n            return '‎€';\r\n        default:\r\n            return currency;\r\n    }\r\n}\r\n\r\nexport function translateEventType(eventType: EventType): string {\r\n    // TODO: Plular\r\n    // TODO: Hardcoded\r\n    switch (eventType) {\r\n        case EventType.HACKATHON:\r\n            return 'Hackathony';\r\n        case EventType.CONFERENCE:\r\n            return '‎Konference';\r\n        case EventType.MEETUP:\r\n            return '‎Meetupy';\r\n        case EventType.WORKSHOP:\r\n            return '‎Workshopy';\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Event } from '../model/database/Event';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { translateCurrency } from '../utils/translate';\r\n\r\ninterface IEventPriceProps {\r\n    event: Event;\r\n    price?: number;\r\n}\r\n\r\n// TODO: Component name suffix to all components\r\nexport function EventPrice({ event, price }: IEventPriceProps) {\r\n    if (!price) price = event.price;\r\n    if (isNullOrUndefined(price)) return <></>;\r\n    if (price === 0) return <>💸&nbsp;Zdarma</>;\r\n    return <>💸&nbsp;{`${Math.ceil(price * 100) / 100} ${translateCurrency(event.priceCurrency!)}`}</>;\r\n}\r\n","import * as React from 'react';\r\nimport { Event } from '../model/database/Event';\r\nimport { EventPrice } from './EventPrice';\r\n\r\ninterface IEventCodeParagraphProps {\r\n    event: Event;\r\n    showCode: boolean;\r\n    verbose: boolean;\r\n}\r\n\r\nexport function EventCodeParagraph({ event, showCode, verbose }: IEventCodeParagraphProps) {\r\n    return (\r\n        <>\r\n            {event.eventCodes.map((eventCode, key) => (\r\n                <span {...{ key }}>\r\n                    <br />\r\n\r\n                    {showCode ? (\r\n                        <>\r\n                            A s kódem <b>{eventCode.code}</b> to budete mít o {Math.floor(eventCode.value * 100)}%\r\n                            levnější\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            S naším kódem, který budeme posílat v dalším emalu, to budete mít o{' '}\r\n                            {Math.floor(eventCode.value * 100)}% levnější\r\n                        </>\r\n                    )}\r\n\r\n                    {verbose && (\r\n                        <>\r\n                            , tzn. za <EventPrice {...{ event, price: event.price * (1 - eventCode.value) }} />\r\n                        </>\r\n                    )}\r\n                </span>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { EventVisibility } from '../model/database/Event';\r\nimport { IEventComponentProps } from './EventComponent';\r\n\r\nexport function EventSummary({ event }: IEventComponentProps) {\r\n    return (\r\n        <>\r\n            {event.visibility === EventVisibility.FEATURED ? <>⭐</> : <></>}\r\n            <a href={event.web.toString()} target=\"_blank\" rel=\"nofolow noopener noreferrer\">\r\n                <b>{event.name}</b>\r\n                {event.topic ? ` – ${event.topic}` : ''}\r\n            </a>\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ApiClientContext } from '../api/ApiClient';\r\nimport { IEventComponentProps } from './EventComponent';\r\n\r\nexport type ICalendarLinkProps = React.PropsWithChildren<IEventComponentProps>;\r\n\r\nexport function CalendarLink({ event, children }: ICalendarLinkProps) {\r\n    const apiClient = React.useContext(ApiClientContext);\r\n\r\n    if (!apiClient) {\r\n        return <>{children}</>;\r\n    }\r\n\r\n    return <CalendarA href={apiClient.createEventCalendarUrl(event)}>{children}</CalendarA>;\r\n}\r\n\r\nconst CalendarA = styled.a`\r\n    text-decoration: none;\r\n`;\r\n","export function capitalizeFirstLetter(word: string): string {\r\n    return word.substr(0, 1).toUpperCase() + word.substr(1)\r\n}\r\n","import moment from 'moment';\r\nimport 'moment/locale/cs';\r\nimport * as React from 'react';\r\nimport { Event } from '../model/database/Event';\r\nimport { capitalizeFirstLetter } from '../utils/capitalizeFirstLetter';\r\n\r\ninterface EventDateComponentProps {\r\n    event: Event;\r\n}\r\n\r\nexport function EventDateComponent({ event }: EventDateComponentProps) {\r\n    const { date, year, month } = event;\r\n\r\n    if (date) {\r\n        try {\r\n            moment.locale('cs');\r\n            let dateString = moment(date).format('LLLL');\r\n            dateString = dateString.split('00:00')[0];\r\n            //TODO: More elegant way\r\n            dateString = dateString.replace('leden', 'ledna');\r\n            dateString = dateString.replace('únor', 'února');\r\n            dateString = dateString.replace('březen', 'března');\r\n            dateString = dateString.replace('duben', 'dubna');\r\n            dateString = dateString.replace('květen', 'května');\r\n            dateString = dateString.replace('červen', 'června');\r\n            dateString = dateString.replace('červnaec', 'červenec'); // This is typo in moment/locale/cs library. We can make an pull request to it but this is the quick local hotfix.\r\n            dateString = dateString.replace('červenec', 'července');\r\n            dateString = dateString.replace('srpen', 'srpna');\r\n            dateString = dateString.replace('září', 'září');\r\n            dateString = dateString.replace('říjen', 'října');\r\n            dateString = dateString.replace('listopad', 'listopadu');\r\n            dateString = dateString.replace('prosinec', 'prosince');\r\n            dateString = capitalizeFirstLetter(dateString);\r\n            return <>📅&nbsp;{dateString}</>;\r\n        } catch (error) {\r\n            console.error(`Problem when parsing moment('${date}').format('LLLL'); See more below:`);\r\n            console.error(error);\r\n            return <></>;\r\n        }\r\n    } else if (year && month) {\r\n        let monthString = moment(month, 'M').format('MMMM');\r\n        monthString = capitalizeFirstLetter(monthString);\r\n        monthString = monthString.replace('Červnaec', 'Červenec'); // This is typo in moment/locale/cs library. We can make an pull request to it but this is the quick local hotfix.\r\n        return (\r\n            <>\r\n                📅&nbsp;{monthString} {year}\r\n            </>\r\n        );\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { Event } from '../model/database/Event';\r\nimport moment from 'moment';\r\nimport 'moment/locale/cs';\r\nimport { IEventComponentProps } from './EventComponent';\r\n\r\n\r\n\r\nexport function EventTimeComponent({ event }: IEventComponentProps) {\r\n    const { time } = event;\r\n\r\n    if (!time) {\r\n        return <></>;\r\n    }\r\n\r\n    try {\r\n        moment.locale('cs');\r\n        let timeString = moment(time, 'hh:mm').format('LT');\r\n        if (timeString === 'Invalid date') {\r\n            throw new Error(`Time was parsed as \"Invalid date\".`);\r\n        }\r\n        return <>⏱️&nbsp;{timeString}</>;\r\n    } catch (error) {\r\n        console.error(`Problem when parsing moment('2010-10-20 ' + '${time}').format('LT'); See more below:`);\r\n        console.error(error);\r\n        return <></>;\r\n    }\r\n}\r\n","export function getCharForCity(city: string): string {\r\n    switch (city) {\r\n        case 'Plzeň':\r\n            return `🐪`;\r\n        default:\r\n            return `🌆`;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Event } from '../model/database/Event';\r\nimport { CalendarLink } from './CalendarLink';\r\nimport { IEventComponentProps } from './EventComponent';\r\nimport { EventDateComponent } from './EventDateComponent';\r\nimport { EventPrice } from './EventPrice';\r\nimport { EventTimeComponent } from './EventTimeComponent';\r\nimport { getCharForCity } from './getCharForCity';\r\n\r\nexport function EventTags({ event }: IEventComponentProps) {\r\n    return <span>{getEventTags(event)}</span>;\r\n}\r\n\r\nexport function getEventTags(event: Event): JSX.Element[] {\r\n    const tags: JSX.Element[] = [];\r\n\r\n    /*\r\n    tags.push(<EventTagSpan key=\"type\">{getCharForEventTag(event.type)}</EventTagSpan>);\r\n    */\r\n\r\n    if (event.canceled === 1) {\r\n        tags.push(<EventTagSpan key=\"canceled\">🚫&nbsp;Zrušeno&nbsp;</EventTagSpan>);\r\n    }\r\n    if (event.city) {\r\n        tags.push(\r\n            <EventTagSpan key=\"city\">\r\n                {getCharForCity(event.city)}&nbsp;{event.city}&nbsp;\r\n            </EventTagSpan>,\r\n        );\r\n    }\r\n    if (event.online) {\r\n        tags.push(<EventTagSpan key=\"online\">🌍&nbsp;Online&nbsp;</EventTagSpan>);\r\n    }\r\n\r\n    tags.push(\r\n        <EventTagSpan key=\"date\">\r\n            <CalendarLink event={event}>\r\n                <EventDateComponent {...{ event }} />\r\n            </CalendarLink>\r\n        </EventTagSpan>,\r\n    );\r\n    tags.push(\r\n        <EventTagSpan key=\"time\">\r\n            <EventTimeComponent {...{ event }} />\r\n        </EventTagSpan>,\r\n    );\r\n    tags.push(\r\n        <EventTagSpan key=\"price\">\r\n            <EventPrice {...{ event }} />\r\n        </EventTagSpan>,\r\n    );\r\n\r\n    return tags;\r\n}\r\n\r\nconst EventTagSpan = styled.span`\r\n    /*border: 1px dashed red;*/\r\n\r\n    &:not(:first-child) {\r\n        padding-left: 0.1rem;\r\n        margin-left: 0.1rem;\r\n\r\n        /*\r\n        border-left: 1px solid #777;\r\n        /*margin-left: 0px;*/\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Event } from '../model/database/Event';\r\nimport { EventCodeParagraph } from './EventCodeParagraph';\r\nimport { EventSummary } from './EventSummary';\r\nimport { EventTags } from './EventTags';\r\n\r\nexport interface IEventComponentProps {\r\n    event: Event;\r\n}\r\n\r\nexport function EventComponent({ event }: IEventComponentProps) {\r\n    return (\r\n        <EventSpan>\r\n            <span className={`${event.dateToCompare < new Date() ? 'past' : ''}`}>\r\n                <EventSummary {...{ event }} />\r\n                <br />\r\n                <EventTags {...{ event }} />\r\n                <EventCodeParagraph {...{ event, verbose: true, showCode: false }} />\r\n                <br />\r\n                <br />\r\n            </span>\r\n        </EventSpan>\r\n    );\r\n}\r\n\r\nconst EventSpan = styled.span`\r\n    .past {\r\n        opacity: 0.5;\r\n    }\r\n\r\n    .canceled {\r\n        opacity: 0.5;\r\n        text-decoration: line-through;\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport { EventType } from '../model/database/Event';\r\nimport { INewsletter } from '../model/INewsletter';\r\nimport { eventTypeToNewsletterContentPosition } from '../utils/eventTypeToNewsletterContentPosition';\r\nimport { translateEventType } from '../utils/translate';\r\nimport { EventComponent } from './EventComponent';\r\nimport { NewsletterContentsComponent } from './NewsletterContentsComponent';\r\n\r\n// TODO: Remove @deprecated import { Newsletter } from '../model/database/Newsletter';\r\n\r\ninterface INewsletterComponentProps {\r\n    newsletter: INewsletter;\r\n}\r\n\r\nexport function NewsletterComponent(props: INewsletterComponentProps) {\r\n    const { categorizedEvents, newsletterContents } = props.newsletter;\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(categorizedEvents).map((type) => (\r\n                <div key={type}>\r\n                    <br />\r\n                    <h2>{translateEventType(type as any)}</h2>\r\n                    <NewsletterContentsComponent\r\n                        {...{ newsletterContents, position: eventTypeToNewsletterContentPosition(type as EventType) }}\r\n                    />\r\n                    <span>\r\n                        {categorizedEvents![type].map((event) => (\r\n                            <EventComponent {...{ event, key: event.serializeId }} />\r\n                        ))}\r\n                    </span>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { Event } from '../model/database/Event';\r\nimport { NewsletterContentPosition } from '../model/database/NewsletterContent';\r\nimport { DateRange } from '../model/DateRange';\r\nimport { joinArray, shuffleArray } from '../utils/array';\r\nimport { createNewsletter } from '../utils/createNewsletter';\r\nimport { NewsletterContentsComponent } from './NewsletterContentsComponent';\r\nimport { NewsletterComponent } from './NewsletterComponent';\r\n\r\n// TODO: Remove @deprecated import { Newsletter } from '../model/database/Newsletter';\r\n\r\ninterface ITalksPageEmailProps {\r\n    range: DateRange;\r\n    events: Event[];\r\n    // TODO: Remove @deprecated newsletter: null | Newsletter;\r\n}\r\n\r\nexport function TalksPageEmail(props: ITalksPageEmailProps) {\r\n    const newsletter = createNewsletter(props);\r\n    const { newsletterContents } = newsletter;\r\n\r\n    return (\r\n        <>\r\n            <h2>\r\n                {/*`📅 Konference / meetupy / hackathony – co se děje z IT / Startupové akce 🌆`*/}\r\n                <NewsletterContentsComponent {...{ newsletterContents, position: NewsletterContentPosition.SUBJECT }} />\r\n            </h2>\r\n            Ahoj,\r\n            <br />\r\n            opět jsme dali dohromady seznam událostí, na které se vyplatí zajít:\r\n            <br />\r\n            <NewsletterContentsComponent {...{ newsletterContents, position: NewsletterContentPosition.HEAD }} />\r\n            <NewsletterComponent {...{ newsletter }} />\r\n            <br /> <br />\r\n            <NewsletterContentsComponent {...{ newsletterContents, position: NewsletterContentPosition.BOTTOM }} />\r\n            {/* <i>\r\n                PS: <b>Budeme rádi za vaše návrhy a připomínky</b>, můžete <b>odpovědět rovnou na email</b>.<br />\r\n                PPS: E-mail posíláme na základě Vaší registrace na stránce{' '}\r\n                <a href=\"https://czech.events/?utm_source=mail&amp;utm_medium=referral&amp;utm_campaign=2020-02_unsubscribe\">\r\n                    czech.events\r\n                </a>\r\n                . Pokud už další email nechcete dostat, napište nám rychlou odpověď.\r\n            </i> */}\r\n            {/*\r\n            <br />\r\n            PPS: Pokud už nechcete dostat další email, klikněte sem pro jejich odhlášení.\r\n            */}\r\n            <br />\r\n            <br />\r\n            {joinArray(\r\n                shuffleArray([\r\n                    <>\r\n                        <a href=\"https://www.pavolhejny.com/?utm_source=czech.events-mail&amp;utm_medium=referral&amp;utm_campaign=signature\">\r\n                            Pavol Hejný\r\n                        </a>\r\n                    </>,\r\n                    <>\r\n                        <a href=\"https://www.linkedin.com/in/tereza-texlova/\">Tereza Texlová</a>\r\n                    </>,\r\n                ]),\r\n                <>&nbsp;&amp;&nbsp;</>,\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import { Event } from '../model/database/Event';\r\nimport { NewsletterContent } from '../model/database/NewsletterContent';\r\nimport { INewsletter } from '../model/INewsletter';\r\nimport { DateRange } from '../model/DateRange';\r\nimport { categorizeEvents } from '../utils/categorizeEvents';\r\nimport { compareEventsbyDate } from '../utils/compareDates';\r\n\r\nexport function createNewsletter({ events, range }: { events: Event[]; range: DateRange }): INewsletter {\r\n    const filteredEvents = events\r\n        //.filter((event) => (event instanceof Event ? event.inMail : true))\r\n        .filter((event) => (event instanceof Event ? range.isIn(event.dateToCompare) : true))\r\n        .sort((a, b) => compareEventsbyDate(a, b));\r\n\r\n    const categorizedEvents = categorizeEvents(filteredEvents);\r\n\r\n    const newsletterContents: NewsletterContent[] = [];\r\n    for (const event of filteredEvents) {\r\n        newsletterContents.push(...event.newsletterContents);\r\n    }\r\n\r\n    return { categorizedEvents, newsletterContents };\r\n}\r\n","import * as React from 'react';\r\nimport { ApiClient } from '../api/ApiClient';\r\nimport { Event } from '../model/database/Event';\r\nimport { DateRange, RangeConstant } from '../model/DateRange';\r\nimport { ErrorComponent } from './ErrorComponent';\r\nimport { Form } from './Form';\r\nimport { LoadingComponent } from './LoadingComponent';\r\nimport { PageDiv } from './PageDiv';\r\n// TODO: Remove @deprecated import { Newsletter } from '../model/database/Newsletter';\r\nimport { Partners } from './Partners';\r\nimport { TalksPageEmail } from './TalksPageEmail';\r\n\r\ninterface ITalksPageProps {\r\n    selfUrl: string;\r\n\r\n    /**\r\n     * @deprecated use prepared React context to pass apiClient\r\n     */\r\n    apiClient: ApiClient;\r\n}\r\n\r\ninterface ITalksPageState {\r\n    error: null | string;\r\n    range: DateRange;\r\n    events: null | Event[];\r\n    // TODO: Remove @deprecated newsletter: null | Newsletter;\r\n}\r\n\r\nconst OPTIONS = [\r\n    {\r\n        value: 'CURRENT_MONTH-NEXT_MONTH',\r\n        desc: 'na další měsíc + události tohoto měsíce:',\r\n    },\r\n    {\r\n        value: 'NEXT_MONTH-NEXT_NEXT_MONTH',\r\n        desc: 'na další měsíc:',\r\n    },\r\n    {\r\n        value: 'NOW-INFINITY',\r\n        desc: 'se všemi událostmi, co právě evidujeme do budoucna:',\r\n    },\r\n    {\r\n        value: 'INFINITY-INFINITY',\r\n        desc: 'se všemi událostmi, co právě evidujeme:',\r\n    },\r\n];\r\n\r\nexport class TalksPage extends React.Component<ITalksPageProps, ITalksPageState> {\r\n    state: ITalksPageState = {\r\n        error: null,\r\n        range: DateRange.fromConstant('CURRENT_MONTH-NEXT_MONTH'),\r\n        events: null,\r\n        // TODO: Remove @deprecated newsletter: null,\r\n    };\r\n\r\n    constructor(props: ITalksPageProps) {\r\n        super(props);\r\n        this.load();\r\n    }\r\n\r\n    private async load() {\r\n        try {\r\n            const events = await this.props.apiClient.getEvents();\r\n            //console.log('events', events);\r\n            this.setState({ events });\r\n\r\n            // TODO: Remove @deprecated const newsletter = await this.props.apiClient.getNewsletter(2020, 2 /* TODO: Unhardcode */);\r\n            // TODO: Remove @deprecated //console.log('newsletter', newsletter);\r\n            // TODO: Remove @deprecated this.setState({ newsletter });\r\n        } catch (error) {\r\n            this.setState({ error: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PageDiv>\r\n                <div className=\"front black\">\r\n                    <div className=\"inner\">\r\n                        <h1>Mějte přehled o nejzajímavějších událostech z IT &amp; startupového světa.</h1>\r\n                        {/*TODO: Semantically h2 is not very ideal here*/}\r\n                        <h2 className=\"font-light\">\r\n                            Dejte nám Vaší emailovou adresu a my Vám budeme pravidelně jednou za měsíc posílat co se\r\n                            děje:\r\n                        </h2>\r\n                        <Form {...{ apiClient: this.props.apiClient }} />\r\n\r\n                        {/*TODO: Semantically h2 is not very ideal here at all*/}\r\n                        <h2 className=\"line separator font-light\">\r\n                            A jak takový mail vypadá? Tady máte živou ukázku z rozpracovaného mailu\r\n                            <select\r\n                                className={'font-light option-in-text'}\r\n                                onChange={(event) => {\r\n                                    const range = DateRange.fromConstant(event.target.value as RangeConstant);\r\n                                    /*console.log(\r\n                                            event.target.value,\r\n                                            DateRange.fromConstant(beginConstant),\r\n                                            DateRange.fromConstant(endConstant),\r\n                                            range,\r\n                                        );*/\r\n\r\n                                    this.setState({ range });\r\n                                }}\r\n                            >\r\n                                {OPTIONS.map((item) => (\r\n                                    <option value={item.value}>{item.desc}</option>\r\n                                ))}\r\n                            </select>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"letter white\">\r\n                    {/*\r\n                        TODO: Or make tabs - see bellow\r\n                        <div className=\"tab\" onClick={() => this.setState({ range: DateRange.CURRENT_MONTH })}>\r\n                            Aktuání měsíc\r\n                        </div>\r\n                        <div className=\"tab\" onClick={() => this.setState({ range: DateRange.ALL })}>\r\n                            Vše\r\n                        </div>\r\n                         */}\r\n\r\n                    <div className=\"inner\">\r\n                        {/*\r\n                            TODO: Here can be a selecotr of the months but firstly we need to add backend and better DB so it is not priority now.\r\n\r\n                            TODO: Or maybe like this:\r\n                            <select>\r\n                                <option>Aktuální měsíc</option>\r\n                                <option>Budoucí události</option>\r\n                                <option>Budoucí události tento měsíc</option>\r\n                                <option>Vše</option>\r\n                            </select>\r\n\r\n                            */}\r\n\r\n                        {this.state.error ? (\r\n                            <ErrorComponent>\r\n                                <pre>{this.state.error}</pre>\r\n                            </ErrorComponent>\r\n                        ) : !this.state.events ? (\r\n                            <LoadingComponent />\r\n                        ) : (\r\n                            <TalksPageEmail\r\n                                {...{\r\n                                    events: this.state.events,\r\n                                    // TODO: Remove @deprecated newsletter: this.state.newsletter,\r\n                                    range: this.state.range,\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <Partners {...{ selfUrl: this.props.selfUrl }} />\r\n            </PageDiv>\r\n        );\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import { createHashHistory, History } from 'history';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Router, Switch } from 'react-router-dom';\r\nimport { ApiClient, ApiClientContext } from './api/ApiClient';\r\nimport { AboutPage } from './components/AboutPage';\r\nimport { Partners } from './components/Partners';\r\nimport { TalksPage } from './components/TalksPage';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// TODO: In some time suddenly occures \"Failed to fetch\" in the\r\n\r\n// TODO: Join app and createApp\r\n\r\nexport class EventsApp {\r\n    private apiClient: ApiClient;\r\n    private history: History;\r\n\r\n    constructor(private rootElement: HTMLDivElement, private apiUrl: string, private selfUrl: string) {\r\n        console.log(`Starting EventsApp.`);\r\n        console.log('rootElement', rootElement);\r\n        console.log('apiUrl', apiUrl);\r\n        console.log('selfUrl', selfUrl);\r\n        this.run();\r\n    }\r\n\r\n    private async run() {\r\n        this.history = createHashHistory();\r\n        this.apiClient = new ApiClient(this.apiUrl);\r\n\r\n        ReactDOM.render(\r\n            <ApiClientContext.Provider value={this.apiClient}>\r\n                <Router {...{ history: this.history }}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <TalksPage {...{ apiClient: this.apiClient, selfUrl: this.selfUrl }} />\r\n                        </Route>\r\n                        <Route exact path=\"/about\">\r\n                            <AboutPage {...{ selfUrl: this.selfUrl }} />\r\n                        </Route>\r\n                        <Route exact path=\"/partners\">\r\n                            <Partners {...{ selfUrl: this.selfUrl }} />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </ApiClientContext.Provider>,\r\n            this.rootElement,\r\n        );\r\n        // If you want your app to work offline and load faster, you can change\r\n        // unregister() to register() below. Note this comes with some pitfalls.\r\n        // Learn more about service workers: https://bit.ly/CRA-PWA\r\n        serviceWorker.unregister();\r\n    }\r\n}\r\n","import { EventsApp } from './EventsApp';\r\nimport './style/body.css';\r\n\r\n(window as any).EventsApp = EventsApp;\r\n"],"sourceRoot":""}