{"version":3,"sources":["model/database/NewsletterContent.ts","model/database/EventCode.ts","model/database/Event.ts","utils/constructObjectFromJSON.ts","model/database/Subscriber.ts","api/ApiClient.ts","components/PageDiv.tsx","components/AboutPage.tsx","model/DateRange.ts","components/ErrorComponent.tsx","components/Form.tsx","components/LoadingComponent.tsx","utils/array.ts","components/Partners.tsx","utils/categorizeEvents.ts","utils/enumToArray.ts","utils/compareDates.ts","components/NewsletterContentsComponent.tsx","utils/eventTypeToNewsletterContentPosition.ts","utils/translate.ts","components/EventPrice.tsx","components/EventCodeParagraph.tsx","utils/capitalizeFirstLetter.tsx","components/EventDateComponent.tsx","components/EventTimeComponent.tsx","components/EventComponent.tsx","components/NewsletterComponent.tsx","components/TalksPageEmail.tsx","utils/createNewsletter.tsx","components/TalksPage.tsx","serviceWorker.ts","EventsApp.tsx","index.tsx"],"names":["NewsletterContentPosition","EventCode","Index","Entity","PrimaryGeneratedColumn","type","name","Column","enum","length","precision","scale","nullable","ManyToOne","Event","event","eventCodes","onDelete","onUpdate","JoinColumn","referencedColumnName","EventType","EventPriceCurrency","EventVisibility","NewsletterContent","comment","newsletterContents","unique","default","OneToMany","eventCode","eager","newsletterContent","this","days","parseInt","split","trim","year","month","day","date","Date","isNaN","getDate","setDate","constructObjectFromJSON","Class","data","instance","Object","assign","Subscriber","ApiClient","apiUrl","a","get","map","subscriber","post","path","fetch","response","json","responseData","method","headers","Accept","body","JSON","stringify","PageDiv","styled","div","AboutPage","props","AboutPageDiv","className","src","url","selfUrl","href","alt","download","DateRange","from","to","beginConstant","endConstant","fromConstant","constant","includes","fromConstants","now","forMonth","getFullYear","getMonth","Error","currentDate","ErrorComponent","children","ErrorDiv","ALL","CURRENT_MONTH","FROM_CURRENT_MONTH","form","Form","FormElement","onSubmit","preventDefault","target","formData","FormData","alert","email","fullname","source","window","location","toString","apiClient","postSubscriber","result","console","log","reset","message","defaultValue","htmlFor","required","id","defaultChecked","value","LoadingComponent","LoadingDiv","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","joinArray","delimiter","delimitedArray","item","push","Partners","PartnersDiv","logoUrl","link","rel","title","style","backgroundImage","categorizeEvents","events","enumerable","eventsCategorized","keys","key","filter","v","eventOrError","eventsCategorizedFiltered","eventType","compareEventsbyDate","event1","event2","date1","date2","delta","error","warn","compareDates","dateToCompare","NewsletterContentsComponent","position","sort","b","order","dangerouslySetInnerHTML","__html","html","join","SUBJECT","eventTypeToNewsletterContentPosition","CONFERENCE","HEAD_CONFERENCES","MEETUP","HEAD_MEETUPS","WORKSHOP","HEAD_WORKSHOPS","HACKATHON","HEAD_HACKATHONS","translateCurrency","currency","CZK","EUR","translateEventType","EventPrice","price","isNullOrUndefined","ceil","priceCurrency","EventCodeParagraph","showCode","verbose","code","capitalizeFirstLetter","word","substr","toUpperCase","toLowerCase","EventDateComponent","monthString","moment","format","replace","locale","dateString","EventTimeComponent","time","timeString","EventComponent","EventSpan","visibility","FEATURED","web","topic","canceled","online","city","NewsletterComponent","newsletter","categorizedEvents","serializeId","TalksPageEmail","range","filteredEvents","isIn","createNewsletter","HEAD","BOTTOM","OPTIONS","desc","TalksPage","state","load","getEvents","setState","onChange","React","Boolean","hostname","match","EventsApp","rootElement","history","run","createHashHistory","ReactDOM","render","exact","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45bfe646.chunk.js","sourcesContent":["import { Column, Entity, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { Event } from './Event';\n\nexport enum NewsletterContentPosition {\n    SUBJECT = 'SUBJECT',\n    HEAD = 'HEAD',\n    HEAD_CONFERENCES = 'HEAD_CONFERENCES',\n    HEAD_MEETUPS = 'HEAD_MEETUPS',\n    HEAD_WORKSHOPS = 'HEAD_WORKSHOPS',\n    HEAD_HACKATHONS = 'HEAD_HACKATHONS',\n    BOTTOM = 'BOTTOM',\n}\n\n@Index('position', ['position'], {})\n@Entity('NewsletterContent')\nexport class NewsletterContent {\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\n    id: number;\n\n    @Column('int', { name: 'event_id', nullable: true, comment: 'Is the paragraph connected to some one event?' })\n    eventId: number;\n\n    @Column('enum', {\n        name: 'position',\n        enum: NewsletterContentPosition,\n    })\n    position: NewsletterContentPosition;\n\n    @Column('int', { name: 'order', nullable: true })\n    order: number | null;\n\n    @Column('text', { name: 'html' })\n    html: string;\n\n    @Column('text', { name: 'note', nullable: true })\n    note: string | null;\n\n    @ManyToOne(() => Event, (event) => event.newsletterContents, { onDelete: 'RESTRICT', onUpdate: 'RESTRICT' })\n    @JoinColumn([{ name: 'event_id', referencedColumnName: 'id' }])\n    event: Event;\n}\n","import { Column, Entity, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Event } from './Event';\n\n@Index('event_id', ['eventId'], {})\n@Index('type', ['type'], {})\n@Index('value', ['value'], {})\n@Entity('EventCode')\nexport class EventCode {\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\n    id: number;\n\n    @Column('int', { name: 'event_id' })\n    eventId: number;\n\n    @Column('enum', { name: 'type', enum: ['DISCOUNT_PERCENT'] })\n    type: 'DISCOUNT_PERCENT';\n\n    @Column('varchar', { name: 'code', length: 200 })\n    code: string;\n\n    @Column('float', { name: 'value', precision: 10, scale: 2 })\n    value: number;\n\n    @Column('text', { name: 'note', nullable: true })\n    note: string | null;\n\n    @ManyToOne(() => Event, (event) => event.eventCodes, { onDelete: 'RESTRICT', onUpdate: 'RESTRICT' })\n    @JoinColumn([{ name: 'event_id', referencedColumnName: 'id' }])\n    event: Event;\n}\n","import { Column, Entity, Index, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { EventCode } from './EventCode';\nimport { NewsletterContent } from './NewsletterContent';\n\nexport enum EventType {\n    CONFERENCE = 'CONFERENCE',\n    MEETUP = 'MEETUP',\n    WORKSHOP = 'WORKSHOP',\n    HACKATHON = 'HACKATHON',\n}\n\nexport enum EventPriceCurrency {\n    CZK = 'CZK',\n    USD = 'USD',\n    EUR = 'EUR',\n}\n\nexport enum EventVisibility {\n    PENDING = 'PENDING',\n    VISIBLE = 'VISIBLE',\n    HIDDEN = 'HIDDEN',\n    FEATURED = 'FEATURED',\n}\n\n@Index('serializeId', ['serializeId'], { unique: true })\n@Index('name_topic', ['name', 'topic'], { unique: true })\n@Index('type', ['type'], {})\n@Index('city', ['city'], {})\n@Index('year', ['year'], {})\n@Index('month', ['month'], {})\n@Index('time', ['time'], {})\n@Index('price', ['price'], {})\n@Index('priceCurrency', ['priceCurrency'], {})\n@Index('visibility', ['visibility'], {})\n@Index('created', ['created'], {})\n@Index('updated', ['updated'], {})\n@Index('canceled', ['canceled'], {})\n@Index('online', ['online'], {})\n@Entity('Event')\nexport class Event {\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\n    id: number;\n\n    @Column('varchar', { name: 'serializeId', unique: true, length: 1000 }) // TODO: This should be named just URL\n    serializeId: string;\n\n    @Column('varchar', { name: 'name', length: 300 })\n    name: string;\n\n    @Column('varchar', { name: 'topic', nullable: true, length: 500 })\n    topic: string | null;\n\n    @Column('enum', {\n        name: 'type',\n        enum: EventType,\n    })\n    type: EventType;\n\n    @Column('varchar', { name: 'web', nullable: true, length: 1000 })\n    web: string | null;\n\n    @Column('varchar', { name: 'city', nullable: true, length: 200 })\n    city: string | null;\n\n    @Column('year', { name: 'year', nullable: true })\n    year: number | null;\n\n    @Column('int', { name: 'month', nullable: true })\n    month: number | null;\n\n    @Column('varchar', { name: 'days', nullable: true, length: 5 })\n    days: string | null;\n\n    @Column('varchar', { name: 'time', nullable: true, length: 8 })\n    time: string | null;\n\n    @Column('int', { name: 'price', nullable: true })\n    price: number | null;\n\n    @Column('enum', {\n        name: 'priceCurrency',\n        nullable: true,\n        enum: EventPriceCurrency,\n    })\n    priceCurrency: EventPriceCurrency | null;\n\n    @Column('enum', {\n        name: 'visibility',\n        enum: EventVisibility,\n        default: () => \"'PENDING'\",\n    })\n    visibility: EventVisibility;\n\n    @Column('tinyint', { name: 'canceled', nullable: true })\n    canceled: number | null;\n\n    @Column('tinyint', { name: 'online', nullable: true })\n    online: number | null;\n\n    @Column('text', { name: 'note', nullable: true })\n    note: string | null;\n\n    @Column('timestamp', { name: 'created', default: () => 'CURRENT_TIMESTAMP' })\n    created: Date;\n\n    @Column('timestamp', { name: 'updated', default: () => 'CURRENT_TIMESTAMP' })\n    updated: Date;\n\n    @OneToMany(() => EventCode, (eventCode) => eventCode.event, { eager: true })\n    eventCodes: EventCode[];\n\n    @OneToMany(() => NewsletterContent, (newsletterContent) => newsletterContent.event, { eager: true })\n    newsletterContents: NewsletterContent[];\n\n    get day(): number | null {\n        if (this.days) {\n            return parseInt(this.days.split('-')[0].trim());\n        } else {\n            return null;\n        }\n    }\n\n    get date(): Date | null {\n        if (this.year && this.month && this.day) {\n            const date = new Date(this.year, this.month - 1, this.day);\n\n            if (!isNaN(date.getDate())) {\n                return date;\n            } else {\n                return null;\n            }\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Purpose of this method is to provide date only for comparing functions - so it can be wrong (for example can be shifted by a day) but roughly OK and everytime defined\n     * compared to Event.date which is everytime precise but can be undefined\n     * This getter is usefull when we have only a month and year of an event but not a precise day.\n     */\n    get dateToCompare(): Date {\n        if (this.date) {\n            return this.date;\n        } else if (this.year && this.month) {\n            const date = new Date(this.year, this.month - 1, 25 /*Some late day in the month*/);\n            return date;\n        } else {\n            const date = new Date();\n            date.setDate(date.getDate() + 1000 /*TODO: Some big constant*/);\n            return date;\n        }\n    }\n\n    /*static error(error: Error):Event{\n    return new Event();\n    }*/\n}\n","type Instantiable = { new (...args: any[]): any };\n\n// TODO: Create AbscractApiClient library\nexport function constructObjectFromJSON<TClass extends Instantiable>(\n    Class: TClass,\n    data: Partial<InstanceType<TClass>>,\n) {\n    const instance = new Class();\n    Object.assign(instance, data);\n    return instance;\n}\n","import { Column, Entity, Index, PrimaryGeneratedColumn } from 'typeorm';\n\n@Index('email', ['email'], {})\n@Index('created', ['created'], {})\n@Index('active', ['active'], {})\n@Entity('Subscriber')\nexport class Subscriber {\n    @PrimaryGeneratedColumn({ type: 'int', name: 'id' })\n    id: number;\n\n    @Column('varchar', { name: 'email', length: 1000 })\n    email: string;\n\n    @Column('varchar', { name: 'fullname', nullable: true, length: 1000 })\n    fullname: string | null;\n\n    @Column('varchar', { name: 'source', nullable: true, length: 2000 })\n    source: string | null;\n\n    @Column('timestamp', { name: 'created', nullable: true })\n    created: Date | null;\n\n    @Column('smallint', { name: 'active', nullable: true, default: () => \"'1'\" })\n    active: number | null;\n}\n","import { Event } from '../model/database/Event';\nimport { constructObjectFromJSON } from '../utils/constructObjectFromJSON';\nimport { Subscriber } from '../model/database/Subscriber';\n\nexport class ApiClient {\n    constructor(private apiUrl: string) {}\n\n    async getAbout() {}\n\n    async getEvents(): Promise<Event[]> {\n        const data = await this.get(`/events`);\n        return data.map((data) => constructObjectFromJSON(Event, data));\n    }\n\n    async postSubscriber(subscriber: Subscriber): Promise<Subscriber> {\n        const data = await this.post(\n            `/subscribers`,\n            subscriber /* TODO: Should be subscriber data directly in request body or should it be wrapped in {subscriber:{...}} */,\n        );\n        return constructObjectFromJSON(Subscriber, data);\n    }\n\n    // TODO: Create AbscractApiClient library\n    // TODO: Generically typed\n    private async get(path: string /*TODO: Add option for query*/) {\n        const response = await fetch(`${this.apiUrl}${path}`);\n        const responseData = await response.json();\n        return responseData;\n    }\n\n    // TODO: Create AbscractApiClient library\n    // TODO: Generically typed\n    private async post(path: string, data: {} /*TODO: Maybe add option for query*/) {\n        const response = await fetch(`${this.apiUrl}${path}`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        });\n        const responseData = await response.json();\n        return responseData;\n    }\n}\n","import styled from 'styled-components';\n\nexport const PageDiv = styled.div`\n    max-width: 1200px;\n    display: inline-block;\n    text-align: left;\n    overflow: visible;\n\n    .white {\n        /*We are using here standart Gmail font*/\n        font-family: Arial, Helvetica, sans-serif, 'Montserrat', serif;\n    }\n\n    .white a {\n        color: black;\n    }\n\n    .front {\n        /*/border: 1px dotted red; /**/\n        width: 100%;\n        max-width: 850px;\n    }\n\n    .front .inner {\n        padding: 10vh;\n        padding-bottom: 0;\n    }\n\n    .front .separator {\n        /*margin-top: 10vh;*/\n    }\n\n    .black {\n        font-family: 'Montserrat', serif;\n        /*font-family: 'Oswald', serif;*/\n    }\n\n    .black h1 {\n        color: rgb(255, 255, 255);\n        text-align: left;\n        font-size: 35px;\n    }\n\n    .black p {\n        font-size: 16px;\n    }\n\n    .black .font-light {\n        font-weight: 100;\n    }\n\n    .black h2 {\n        color: rgb(255, 255, 255);\n        text-align: left;\n        font-size: 20px;\n    }\n\n    .black * {\n        box-sizing: border-box;\n    }\n\n    .black a:link {\n        color: white;\n    }\n\n    .black a:visited {\n        color: rgb(211, 211, 211);\n    }\n\n    .black a:hover {\n        color: hotpink;\n    }\n\n    .black .group {\n        width: 100%;\n        height: 90px;\n        overflow: hidden;\n        position: relative;\n    }\n    .black .group.checkbox {\n        width: 100%;\n        height: 40px;\n    }\n\n    .black .bar {\n        background: rgba(255, 255, 255, 0.5);\n        content: '';\n        max-width: 500px;\n        height: 2px;\n        transition: 0.3s ease;\n        position: relative;\n    }\n    .black .bar:before {\n        content: '';\n        position: absolute;\n        width: 100%;\n        height: 150%;\n        background: #01ccbf;\n        transform: translateX(-100%);\n    }\n\n    .black ::selection {\n        background: rgba(33, 150, 243, 0.3);\n    }\n\n    .line {\n        line-height: 32px;\n    }\n\n    .option-in-text {\n        background: none;\n        color: white;\n        margin-left: 0.35em;\n        outline: none;\n        border: 2px solid rgba(255, 255, 255, 0.5);\n        font-weight: 100;\n        font-size: 20px;\n        font-family: 'Montserrat', serif;\n    }\n\n    .option-in-text option {\n        background: white;\n        color: black;\n    }\n\n    .letter {\n        margin: 5vh;\n        padding: 5vh;\n        background-color: white;\n        border-radius: 50px;\n    }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { PageDiv } from './PageDiv';\ninterface IAboutPageProps {\n    selfUrl: string;\n}\n\nexport function AboutPage(props: IAboutPageProps) {\n    return (\n        <PageDiv>\n            <AboutPageDiv>\n                <div className=\"front black\">\n                    <div className=\"inner\">\n                        {/* <h1>Czech.events</h1> */}\n\n                        {[\n                            {\n                                name: 'Tmavá verze',\n                                src: 'czech.events.black-logo.png',\n                            },\n\n                            {\n                                name: 'Světlá verze',\n                                src: 'czech.events.white-logo.png',\n                            },\n                        ].map(({ name, src }) => {\n                            const url = `${props.selfUrl}/design/logos/${src}`;\n                            return (\n                                <div key={src} className=\"logo\">\n                                    <a href={url}>\n                                        <img src={url} alt=\"Czech.events logo\" />\n                                    </a>\n                                    {`${name} `}\n                                    <a href={url} download>\n                                        (Stáhnout)\n                                    </a>\n                                    <pre>\n                                        {`                                     \n<a href=\"https://czech.events/\">\n    <img src=\"${url}\" alt=\"Czech.events logo\" width=\"200\" />\n</a>`.trim()}\n                                    </pre>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </AboutPageDiv>\n        </PageDiv>\n    );\n}\n\nexport const AboutPageDiv = styled.div`\n    .logo {\n        margin: 20px;\n        border-radius: 5px;\n        display: inline-block;\n        width: 200px;\n        height: 200px;\n        color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    .logo img {\n        display: block;\n        max-width: 200px;\n        max-height: 200px;\n    }\n\n    .logo pre {\n        display: block;\n        width: 200px;\n        overflow-x: scroll;\n    }\n`;\n","export class DateRange {\n    constructor(public from?: Date, public to?: Date) {}\n\n    private static fromConstants(beginConstant: RangeConstantSimple, endConstant: RangeConstantSimple): DateRange {\n        return new DateRange(DateRange.fromConstant(beginConstant).from, DateRange.fromConstant(endConstant).to);\n    }\n\n    static fromConstant(constant: RangeConstant): DateRange {\n        if (constant.includes('-')) {\n            const [from, to] = constant.split('-');\n            return DateRange.fromConstants(from as RangeConstantSimple, to as RangeConstantSimple);\n        }\n\n        const now = new Date();\n\n        switch (constant) {\n            case 'NOW':\n                return new DateRange(now, now);\n\n            case 'CURRENT_MONTH':\n                return DateRange.forMonth(now);\n\n            case 'NEXT_MONTH':\n                return DateRange.forMonth(new Date(now.getFullYear(), now.getMonth() + 1, 1));\n\n            // TODO: Maybe better name for NEXT_NEXT_MONTH\n            // TODO: DRY\n            case 'NEXT_NEXT_MONTH':\n                return DateRange.forMonth(new Date(now.getFullYear(), now.getMonth() + 2, 1));\n\n            case 'INFINITY':\n                return new DateRange();\n\n            default:\n                throw new Error(\n                    `Unknown range constant \"${constant}\". Please use NOW, CURRENT_MONTH, NEXT_MONTH, NEXT_NEXT_MONTH or INFINITY.`,\n                );\n        }\n    }\n\n    static forMonth(currentDate = new Date()): DateRange {\n        const month = currentDate.getMonth();\n        const year = currentDate.getFullYear();\n\n        const from = new Date(year, month, 1);\n        const to = new Date(year, month + 1, -1);\n\n        return new DateRange(from, to);\n    }\n\n    // TODO: Deprecated due to fromConstants, fromConstant\n    static ALL = new DateRange();\n    static CURRENT_MONTH = DateRange.forMonth();\n    static FROM_CURRENT_MONTH = new DateRange(DateRange.CURRENT_MONTH.from);\n\n    isIn(date: Date) {\n        if (this.from && this.from > date) {\n            return false;\n        }\n\n        if (this.to && this.to < date) {\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport type RangeConstantSimple = 'NOW' | 'CURRENT_MONTH' | 'NEXT_MONTH' | 'NEXT_NEXT_MONTH' | 'INFINITY';\nexport type RangeConstant =\n    | 'NOW'\n    | 'CURRENT_MONTH'\n    | 'NEXT_MONTH'\n    | 'NEXT_NEXT_MONTH'\n    | 'INFINITY'\n    | `${RangeConstantSimple}-${RangeConstantSimple}`;\n\n/*/\nfor (const constant of ['NOW', 'CURRENT_MONTH', 'NEXT_MONTH', 'NEXT_NEXT_MONTH', 'INFINITY'] as RangeConstant[]) {\n    console.log(constant, DateRange.fromConstant(constant));\n}\n/**/\n","import * as React from 'react';\nimport styled from 'styled-components';\n\n// TODO: Deprecated remove\nexport function ErrorComponent({ children }: React.PropsWithChildren<{}>) {\n    return <ErrorDiv>{children}</ErrorDiv>;\n}\n\nconst ErrorDiv = styled.form`\n    background-color: #f00;\n    color: #fff;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { ApiClient } from '../api/ApiClient';\nimport { Subscriber } from '../model/database/Subscriber';\nimport { constructObjectFromJSON } from '../utils/constructObjectFromJSON';\n\ninterface IFormProps {\n    apiClient: ApiClient;\n}\n\nexport function Form(props: IFormProps) {\n    // TODO: To Config\n    return (\n        <FormElement\n            onSubmit={async (event) => {\n                event.preventDefault();\n                const form = event.target as HTMLFormElement;\n                const formData = new FormData(form);\n\n                if (!formData.get('gdpr')) {\n                    alert(`Potřebujeme od Vás zaškrtnout souhlas se zpracováním osobních údajů.`);\n                    return;\n                }\n\n                const subscriber = constructObjectFromJSON(Subscriber, {\n                    email: formData.get('email') as string,\n                    fullname: formData.get('fullname') as string,\n                    source: window.location.toString(),\n                });\n\n                try {\n                    const result = await props.apiClient.postSubscriber(subscriber);\n\n                    console.log('result', result);\n\n                    form.reset();\n                    alert(`Děkujeme, můžete se těšit na další email!`);\n                } catch (error) {\n                    alert(error.message /*TODO: Better*/);\n                }\n            }}\n        >\n            <div className=\"group\">\n                <input type=\"text\" name=\"fullname\" className=\"field\" defaultValue=\"\" />\n                <label htmlFor=\"name\">Vaše jméno:</label>\n                <div className=\"bar\"></div>\n            </div>\n\n            <div className=\"group\">\n                <input type=\"email\" name=\"email\" defaultValue=\"@\" required className=\"field\" />\n                <label htmlFor=\"email\">E-mail: *</label>\n                <div className=\"bar\"></div>\n            </div>\n\n            <div className=\"group checkbox gdpr\">\n                <input type=\"checkbox\" name=\"gdpr\" id=\"gdpr\" defaultChecked={false} />\n                <label htmlFor=\"gdpr\">Souhlasím se zpracováním osobních údajů</label>\n            </div>\n\n            {/* TODO: We need here some GDPR */}\n            <div className=\"center\">\n                <input value=\"Přihlásit se \" type=\"submit\" id=\"submit\" name=\"submit\" className=\"button\" />\n            </div>\n        </FormElement>\n    );\n}\n\nconst FormElement = styled.form`\n    padding: 40px 0;\n    max-width: 450px;\n\n    label {\n        position: absolute;\n        top: 20px;\n        color: rgba(255, 255, 255, 0.5);\n        font: 400 16px Montserrat;\n        cursor: text;\n        transition: 0.25s ease;\n    }\n\n    .gdpr label {\n        top: 2px;\n        padding-left: 8px;\n    }\n\n    .field {\n        display: block;\n        width: 100%;\n        padding-top: 42px;\n        border: none;\n        border-radius: 0;\n        color: white;\n        background: transparent;\n        font-size: 20px;\n        transition: 0.3s ease;\n    }\n    .field:valid ~ label {\n        top: 0;\n        font: 700 16px;\n        transition: 0.3s ease;\n    }\n    .field:focus {\n        outline: none;\n    }\n    .field:focus ~ label {\n        top: 0;\n        font: 700 16px Montserrat;\n        color: #01ccbf;\n        transition: 0.3s ease;\n        transform: translateX(0);\n    }\n    .field:focus ~ .bar:before {\n        transform: translateX(0);\n    }\n    .field:-webkit-autofill {\n        -webkit-box-shadow: 0 0 0px 1000px #333 inset;\n        -webkit-text-fill-color: white !important;\n    }\n\n    .button {\n        display: block;\n        width: 100%;\n        padding-top: 42px;\n        border: none;\n        border-radius: 0;\n        color: white;\n        background: transparent;\n        font-size: 20px;\n        transition: 0.3s ease;\n\n        text-decoration: none;\n        font: 100 18px Montserrat;\n        padding: 16px 20px;\n        color: white;\n        cursor: pointer;\n        display: inline-block;\n        background-color: transparent;\n        border-radius: 6px;\n        /* border: 1px solid #ffffff55; */\n        background-color: #ffffff11;\n    }\n\n    .button:hover {\n        background-color: white;\n        color: black;\n    }\n\n    .center {\n        text-align: center;\n        margin: 0 auto;\n    }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nexport function LoadingComponent() {\n    return <LoadingDiv>Načítání...</LoadingDiv>;\n}\n\nconst LoadingDiv = styled.form`\n    background-color: #ccc;\n    color: #fff;\n`;\n","export function shuffleArray<T>(array: T[]): T[] {\n    array = [...array];\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nexport function joinArray<T>(array: T[], delimiter: T): T[] {\n    const delimitedArray: T[] = [];\n\n    for (const item of array) {\n        if (delimitedArray.length) {\n            delimitedArray.push(delimiter);\n        }\n        delimitedArray.push(item);\n    }\n\n    return delimitedArray;\n}\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { shuffleArray } from '../utils/array';\n\ninterface IPartnersProps {\n    selfUrl: string;\n}\n\nexport function Partners(props: IPartnersProps) {\n    return (\n        <>\n            <PartnersDiv className=\"partners\">\n                <h2>Mediální partneři</h2>\n                {shuffleArray([\n                    // TODO: To some other file or even to DB\n                    {\n                        name: 'Startup Weekend Prague',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/startup-weekend-prague.png`,\n                        link: 'https://www.facebook.com/swprague/',\n                    },\n\n                    {\n                        name: 'Startup Weekend Bratislava',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/startup-weekend-bratislava.png`,\n                        link: 'https://www.facebook.com/StartupWeekendBratislava/',\n                    },\n                    {\n                        name: 'Undout Sleep Box',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/undout.png`,\n                        link: 'https://undout.com/',\n                    },\n                    {\n                        name: 'HackPrague',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/hackprague.svg`,\n                        link: 'https://hackprague.com/',\n                    },\n                    {\n                        name: 'StartupBox',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/startupbox.png`,\n                        link: 'https://www.startupbox.cz/',\n                    },\n                    /*\n                    TODO:\n                    {\n                        name: 'CEEHACKS',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/ceehacks.png`,\n                        link: 'https://www.ceehacks.com/',\n                    },\n                    {\n                        name: 'TechHeaven',\n                        logoUrl: `${props.selfUrl}/design/logos/partners/techheaven.svg`,\n                        link: 'https://techheaven.org/',\n                    },*/\n                    // TODO: CzechFuture tech\n                    // TODO: Random shuffle\n                ]).map(({ name, logoUrl, link }) => {\n                    return (\n                        <a\n                            href={`${link}?utm_source=czech.events&amp;utm_medium=referral&amp;utm_campaign=partners`}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            title={name}\n                        >\n                            <div key={name} className=\"logo\" style={{ backgroundImage: `url(${logoUrl})` }}>\n                                {/* <img src={logoUrl} title={name} alt={`${name} logo`} /> */}\n                                {/*`${name} `*/}\n                            </div>\n                        </a>\n                    );\n                })}\n\n                <Link to=\"/about\" className=\"our-logos\">\n                    O nás a loga Czech.events\n                </Link>\n            </PartnersDiv>\n        </>\n    );\n}\n\nexport const PartnersDiv = styled.div`\n    text-align: center;\n    font-family: Arial, Helvetica, sans-serif, 'Montserrat', serif;\n    color: rgb(212, 212, 212);\n    padding: 2em;\n    /* padding-top: 0; */\n\n    h2 {\n        font-size: 1.5rem;\n        font-family: 'Montserrat', serif;\n    }\n\n    .logo {\n        margin: 20px;\n        border-radius: 5px;\n        display: inline-block;\n        width: 100px;\n        height: 100px;\n        color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    .our-logos {\n        font-size: 0.8em;\n        color: white;\n        display: block;\n    }\n`;\n","import { EventType } from './../model/database/Event';\nimport { Event } from '../model/database/Event';\nimport { enumToArray } from './enumToArray';\nimport { IEventsCategorized } from '../model/IEventsCategorized';\n\nexport function categorizeEvents(events: Event[]): IEventsCategorized {\n    const eventsCategorized: IEventsCategorized = {};\n\n    for (const eventType of enumToArray(EventType)) {\n        eventsCategorized[eventType] = [];\n    }\n\n    for (const eventOrError of events) {\n        let type: string;\n        if (eventOrError instanceof Event) {\n            type = eventOrError.type;\n        } else {\n            type = 'errors';\n        }\n\n        eventsCategorized[type] = eventsCategorized[type] || [];\n        eventsCategorized[type].push(eventOrError);\n    }\n\n    const eventsCategorizedFiltered: IEventsCategorized = {};\n\n    for (const eventType of Object.keys(eventsCategorized)) {\n        if (eventsCategorized[eventType].length > 0) {\n            eventsCategorizedFiltered[eventType] = eventsCategorized[eventType];\n        }\n    }\n\n    return eventsCategorizedFiltered;\n}\n","export function enumToArray(enumerable: any): string[] {\n    let enumMembers: any[] = Object.keys(enumerable).map((key) => enumerable[key]);\n    let enumValues: string[] = enumMembers.filter((v) => typeof v === 'string');\n    return enumValues;\n}\n","import { Event } from '../model/database/Event';\n\ntype CompareResult = 1 | -1 | 0;\n\nexport function compareEventsbyDate(event1?: Event, event2?: Event): CompareResult {\n    return compareDates(event1.dateToCompare, event2.dateToCompare);\n}\n\nexport function compareDates(date1: Date, date2: Date): CompareResult {\n    try {\n        const delta = ((new Date(date2) as any) as number) - ((new Date(date1) as any) as number);\n\n        if (delta > 0) {\n            return -1;\n        } else if (delta < 0) {\n            return 1;\n        } else {\n            return 0;\n        }\n    } catch (error) {\n        console.warn(error);\n        return -1;\n    }\n}\n","import * as React from 'react';\nimport { NewsletterContent, NewsletterContentPosition } from '../model/database/NewsletterContent';\n\ninterface INewsletterContentsComponentProps {\n    position: NewsletterContentPosition;\n    newsletterContents: NewsletterContent[];\n}\n\nexport function NewsletterContentsComponent({ newsletterContents, position }: INewsletterContentsComponentProps) {\n    return (\n        <>\n            {newsletterContents\n                .filter((newsletterContent) => newsletterContent.position === position)\n                .sort((a, b) => (a.order > b.order ? 1 : -1) /* TODO: Correct? */)\n                .map((newsletterContent, key) => (\n                    <div key={key}>\n                        <span dangerouslySetInnerHTML={{ __html: newsletterContent.html.split('\\n').join('<br/>') }} />\n                        {position !== NewsletterContentPosition.SUBJECT && (\n                            <>\n                                <br />\n                            </>\n                        )}\n                    </div>\n                ))}\n        </>\n    );\n}\n","import { NewsletterContentPosition } from '../model/database/NewsletterContent';\nimport { EventType } from '../model/database/Event';\n\nexport function eventTypeToNewsletterContentPosition(eventType: EventType): NewsletterContentPosition {\n    switch (eventType) {\n        case EventType.CONFERENCE:\n            return NewsletterContentPosition.HEAD_CONFERENCES;\n        case EventType.MEETUP:\n            return NewsletterContentPosition.HEAD_MEETUPS;\n        case EventType.WORKSHOP:\n            return NewsletterContentPosition.HEAD_WORKSHOPS;\n        case EventType.HACKATHON:\n            return NewsletterContentPosition.HEAD_HACKATHONS;\n        default:\n            throw new Error(`Can not convert \"${eventType}\" into NewsletterContentPosition.`);\n    }\n}\n","import { EventType, EventPriceCurrency } from './../model/database/Event';\n\nexport function translateCurrency(currency: EventPriceCurrency): string {\n    // TODO: Hardcoded\n    switch (currency) {\n        case 'CZK' as any:\n        case EventPriceCurrency.CZK:\n            return 'Kč';\n        case 'EUR' as any:\n        case EventPriceCurrency.EUR:\n            return '‎€';\n        default:\n            return currency;\n    }\n}\n\nexport function translateEventType(eventType: EventType): string {\n    // TODO: Plular\n    // TODO: Hardcoded\n    switch (eventType) {\n        case EventType.HACKATHON:\n            return 'Hackathony';\n        case EventType.CONFERENCE:\n            return '‎Konference';\n        case EventType.MEETUP:\n            return '‎Meetupy';\n        case EventType.WORKSHOP:\n            return '‎Workshopy';\n    }\n}\n","import * as React from 'react';\nimport { Event } from '../model/database/Event';\nimport { isNullOrUndefined } from 'util';\nimport { translateCurrency } from '../utils/translate';\n\ninterface IEventPriceProps {\n    event: Event;\n    price?: number;\n}\n\n// TODO: Component name suffix to all components\nexport function EventPrice({ event, price }: IEventPriceProps) {\n    if (!price) price = event.price;\n    if (isNullOrUndefined(price)) return <></>;\n    if (price === 0) return <>💸&nbsp;Zdarma</>;\n    return <>💸&nbsp;{`${Math.ceil(price * 100) / 100} ${translateCurrency(event.priceCurrency!)}`}</>;\n}\n","import * as React from 'react';\nimport { Event } from '../model/database/Event';\nimport { EventPrice } from './EventPrice';\n\ninterface IEventCodeParagraphProps {\n    event: Event;\n    showCode: boolean;\n    verbose: boolean;\n}\n\nexport function EventCodeParagraph({ event, showCode, verbose }: IEventCodeParagraphProps) {\n    return (\n        <>\n            {event.eventCodes.map((eventCode, key) => (\n                <span {...{ key }}>\n                    <br />\n\n                    {showCode ? (\n                        <>\n                            A s kódem <b>{eventCode.code}</b> to budete mít o {Math.floor(eventCode.value * 100)}%\n                            levnější\n                        </>\n                    ) : (\n                        <>\n                            S naším kódem, který budeme posílat v dalším emalu, to budete mít o{' '}\n                            {Math.floor(eventCode.value * 100)}% levnější\n                        </>\n                    )}\n\n                    {verbose && (\n                        <>\n                            , tzn. za <EventPrice {...{ event, price: event.price * (1 - eventCode.value) }} />\n                        </>\n                    )}\n                </span>\n            ))}\n        </>\n    );\n}\n","export function capitalizeFirstLetter(word: string): string {\n    return word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase();\n}\n","import 'moment/locale/cs';\n\nimport moment from 'moment';\nimport * as React from 'react';\n\nimport { Event } from '../model/database/Event';\nimport { capitalizeFirstLetter } from '../utils/capitalizeFirstLetter';\n\ninterface EventDateComponentProps {\n    event: Event;\n}\n\nexport function EventDateComponent({ event }: EventDateComponentProps) {\n    const { date, year, month } = event;\n\n    if (date) {\n        try {\n            moment.locale('cs');\n            let dateString = moment(date).format('LLLL');\n            dateString = dateString.split('0:00')[0];\n            //TODO: More elegant way\n            dateString = dateString.replace('leden', 'ledna');\n            dateString = dateString.replace('únor', 'února');\n            dateString = dateString.replace('březen', 'března');\n            dateString = dateString.replace('duben', 'dubna');\n            dateString = dateString.replace('květen', 'května');\n            dateString = dateString.replace('červen', 'června');\n            dateString = dateString.replace('červnaec', 'červenec'); // This is typo in moment/locale/cs library. We can make an pull request to it but this is the quick local hotfix.\n            dateString = dateString.replace('červenec', 'července');\n            dateString = dateString.replace('srpen', 'srpna');\n            dateString = dateString.replace('září', 'září');\n            dateString = dateString.replace('říjen', 'října');\n            dateString = dateString.replace('listopad', 'listopadu');\n            dateString = dateString.replace('prosinec', 'prosince');\n            dateString = capitalizeFirstLetter(dateString);\n            return <>📅&nbsp;{dateString}</>;\n        } catch (error) {\n            console.error(`Problem when parsing moment('${date}').format('LLLL'); See more below:`);\n            console.error(error);\n            return <></>;\n        }\n    } else if (year && month) {\n        let monthString = moment(month, 'M').format('MMMM');\n        monthString = capitalizeFirstLetter(monthString);\n        monthString = monthString.replace('Červnaec', 'Červenec'); // This is typo in moment/locale/cs library. We can make an pull request to it but this is the quick local hotfix.\n        return (\n            <>\n                📅&nbsp;{monthString} {year}\n            </>\n        );\n    } else {\n        return <></>;\n    }\n}\n\ninterface EventTimeComponentProps {\n    time: string;\n}\n","import * as React from 'react';\nimport { Event } from '../model/database/Event';\nimport moment from 'moment';\nimport 'moment/locale/cs';\n\ninterface EventTimeComponentProps {\n    event: Event;\n}\n\nexport function EventTimeComponent({ event }: EventTimeComponentProps) {\n    const { time } = event;\n\n    if (!time) {\n        return <></>;\n    }\n\n    try {\n        moment.locale('cs');\n        let timeString = moment(time, 'hh:mm').format('LT');\n        if (timeString === 'Invalid date') {\n            throw new Error(`Time was parsed as \"Invalid date\".`);\n        }\n        return <>⏱️&nbsp;{timeString}</>;\n    } catch (error) {\n        console.error(`Problem when parsing moment('2010-10-20 ' + '${time}').format('LT'); See more below:`);\n        console.error(error);\n        return <></>;\n    }\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Event, EventVisibility } from '../model/database/Event';\nimport { EventCodeParagraph } from './EventCodeParagraph';\nimport { EventDateComponent } from './EventDateComponent';\nimport { EventPrice } from './EventPrice';\nimport { EventTimeComponent } from './EventTimeComponent';\n\ninterface IEventComponentProps {\n    event: Event;\n}\n\nexport function EventComponent({ event }: IEventComponentProps) {\n    return (\n        <EventSpan>\n            <span className={`${event.dateToCompare < new Date() ? 'past' : ''}`}>\n                {event.visibility === EventVisibility.FEATURED ? '⭐' : ''}\n                <a href={event.web.toString()} target=\"_blank\" rel=\"nofolow noopener noreferrer\">\n                    <b>{event.name}</b>\n                    {event.topic ? ` – ${event.topic}` : ''}\n                </a>\n                <br />\n                {event.canceled === 1 && <>🚫&nbsp;Zrušeno&nbsp;</>}\n                {event.online === 1 && <>🌍&nbsp;Online&nbsp;</>}\n                {event.city && (\n                    <>\n                        🌆&nbsp;{event.city}&nbsp;{/* TODO: Plzeň místo 🌆 dát jako easter egg 🐪 */}\n                    </>\n                )}\n                <EventDateComponent {...{ event }} />\n                <EventTimeComponent {...{ event }} />\n                &nbsp;\n                <EventPrice {...{ event }} />\n                <EventCodeParagraph {...{ event, verbose: true, showCode: false }} />\n                {}\n                <br />\n                <br />\n                {}\n            </span>\n        </EventSpan>\n    );\n}\n\nconst EventSpan = styled.form`\n    .past {\n        opacity: 0.5;\n    }\n\n    .canceled {\n        opacity: 0.5;\n        text-decoration: line-through;\n    }\n`;\n","import * as React from 'react';\nimport { EventType } from '../model/database/Event';\nimport { INewsletter } from '../model/INewsletter';\nimport { eventTypeToNewsletterContentPosition } from '../utils/eventTypeToNewsletterContentPosition';\nimport { translateEventType } from '../utils/translate';\nimport { EventComponent } from './EventComponent';\nimport { NewsletterContentsComponent } from './NewsletterContentsComponent';\n\n// TODO: Remove @deprecated import { Newsletter } from '../model/database/Newsletter';\n\ninterface INewsletterComponentProps {\n    newsletter: INewsletter;\n}\n\nexport function NewsletterComponent(props: INewsletterComponentProps) {\n    const { categorizedEvents, newsletterContents } = props.newsletter;\n\n    return (\n        <>\n            {Object.keys(categorizedEvents).map((type) => (\n                <div key={type}>\n                    <br />\n                    <h2>{translateEventType(type as any)}</h2>\n                    <NewsletterContentsComponent\n                        {...{ newsletterContents, position: eventTypeToNewsletterContentPosition(type as EventType) }}\n                    />\n                    <span>\n                        {categorizedEvents![type].map((event) => (\n                            <EventComponent {...{ event, key: event.serializeId }} />\n                        ))}\n                    </span>\n                </div>\n            ))}\n        </>\n    );\n}\n","import * as React from 'react';\n\nimport { Event } from '../model/database/Event';\nimport { NewsletterContentPosition } from '../model/database/NewsletterContent';\nimport { DateRange } from '../model/DateRange';\nimport { joinArray, shuffleArray } from '../utils/array';\nimport { createNewsletter } from '../utils/createNewsletter';\nimport { NewsletterContentsComponent } from './NewsletterContentsComponent';\nimport { NewsletterComponent } from './NewsletterComponent';\n\n// TODO: Remove @deprecated import { Newsletter } from '../model/database/Newsletter';\n\ninterface ITalksPageEmailProps {\n    range: DateRange;\n    events: Event[];\n    // TODO: Remove @deprecated newsletter: null | Newsletter;\n}\n\nexport function TalksPageEmail(props: ITalksPageEmailProps) {\n    const newsletter = createNewsletter(props);\n    const { newsletterContents } = newsletter;\n\n    return (\n        <>\n            <h2>\n                {/*`📅 Konference / meetupy / hackathony – co se děje z IT / Startupové akce 🌆`*/}\n                <NewsletterContentsComponent {...{ newsletterContents, position: NewsletterContentPosition.SUBJECT }} />\n            </h2>\n            Ahoj,\n            <br />\n            opět jsme dali dohromady seznam událostí, na které se vyplatí zajít:\n            <br />\n            <NewsletterContentsComponent {...{ newsletterContents, position: NewsletterContentPosition.HEAD }} />\n            <NewsletterComponent {...{ newsletter }} />\n            <br /> <br />\n            <NewsletterContentsComponent {...{ newsletterContents, position: NewsletterContentPosition.BOTTOM }} />\n            {/* <i>\n                PS: <b>Budeme rádi za vaše návrhy a připomínky</b>, můžete <b>odpovědět rovnou na email</b>.<br />\n                PPS: E-mail posíláme na základě Vaší registrace na stránce{' '}\n                <a href=\"https://czech.events/?utm_source=mail&amp;utm_medium=referral&amp;utm_campaign=2020-02_unsubscribe\">\n                    czech.events\n                </a>\n                . Pokud už další email nechcete dostat, napište nám rychlou odpověď.\n            </i> */}\n            {/*\n            <br />\n            PPS: Pokud už nechcete dostat další email, klikněte sem pro jejich odhlášení.\n            */}\n            <br />\n            <br />\n            {joinArray(\n                shuffleArray([\n                    <>\n                        <a href=\"https://www.pavolhejny.com/?utm_source=czech.events-mail&amp;utm_medium=referral&amp;utm_campaign=signature\">\n                            Pavol Hejný\n                        </a>\n                    </>,\n                    <>\n                        <a href=\"https://www.linkedin.com/in/tereza-texlova/\">Tereza Texlová</a>\n                    </>,\n                ]),\n                <>&nbsp;&amp;&nbsp;</>,\n            )}\n        </>\n    );\n}\n","import { Event } from '../model/database/Event';\nimport { NewsletterContent } from '../model/database/NewsletterContent';\nimport { INewsletter } from '../model/INewsletter';\nimport { DateRange } from '../model/DateRange';\nimport { categorizeEvents } from '../utils/categorizeEvents';\nimport { compareEventsbyDate } from '../utils/compareDates';\n\nexport function createNewsletter({ events, range }: { events: Event[]; range: DateRange }): INewsletter {\n    const filteredEvents = events\n        //.filter((event) => (event instanceof Event ? event.inMail : true))\n        .filter((event) => (event instanceof Event ? range.isIn(event.dateToCompare) : true))\n        .sort((a, b) => compareEventsbyDate(a, b));\n\n    const categorizedEvents = categorizeEvents(filteredEvents);\n\n    const newsletterContents: NewsletterContent[] = [];\n    for (const event of filteredEvents) {\n        newsletterContents.push(...event.newsletterContents);\n    }\n\n    return { categorizedEvents, newsletterContents };\n}\n","import * as React from 'react';\nimport { ApiClient } from '../api/ApiClient';\nimport { Event } from '../model/database/Event';\nimport { DateRange, RangeConstant } from '../model/DateRange';\nimport { ErrorComponent } from './ErrorComponent';\nimport { Form } from './Form';\nimport { LoadingComponent } from './LoadingComponent';\nimport { PageDiv } from './PageDiv';\n// TODO: Remove @deprecated import { Newsletter } from '../model/database/Newsletter';\nimport { Partners } from './Partners';\nimport { TalksPageEmail } from './TalksPageEmail';\n\ninterface ITalksPageProps {\n    selfUrl: string;\n    apiClient: ApiClient;\n}\n\ninterface ITalksPageState {\n    error: null | string;\n    range: DateRange;\n    events: null | Event[];\n    // TODO: Remove @deprecated newsletter: null | Newsletter;\n}\n\nconst OPTIONS = [\n    {\n        value: 'CURRENT_MONTH-NEXT_MONTH',\n        desc: 'na další měsíc + události tohoto měsíce:',\n    },\n    {\n        value: 'NEXT_MONTH-NEXT_NEXT_MONTH',\n        desc: 'na další měsíc:',\n    },\n    {\n        value: 'NOW-INFINITY',\n        desc: 'se všemi událostmi, co právě evidujeme do budoucna:',\n    },\n    {\n        value: 'INFINITY-INFINITY',\n        desc: 'se všemi událostmi, co právě evidujeme:',\n    },\n];\n\nexport class TalksPage extends React.Component<ITalksPageProps, ITalksPageState> {\n    state: ITalksPageState = {\n        error: null,\n        range: DateRange.fromConstant('CURRENT_MONTH-NEXT_MONTH'),\n        events: null,\n        // TODO: Remove @deprecated newsletter: null,\n    };\n\n    constructor(props: ITalksPageProps) {\n        super(props);\n        this.load();\n    }\n\n    private async load() {\n        try {\n            const events = await this.props.apiClient.getEvents();\n            //console.log('events', events);\n            this.setState({ events });\n\n            // TODO: Remove @deprecated const newsletter = await this.props.apiClient.getNewsletter(2020, 2 /* TODO: Unhardcode */);\n            // TODO: Remove @deprecated //console.log('newsletter', newsletter);\n            // TODO: Remove @deprecated this.setState({ newsletter });\n        } catch (error) {\n            this.setState({ error: error.message });\n        }\n    }\n\n    render() {\n        return (\n            <PageDiv>\n                <div className=\"front black\">\n                    <div className=\"inner\">\n                        <h1>Mějte přehled o nejzajímavějších událostech z IT &amp; startupového světa.</h1>\n                        {/*TODO: Semantically h2 is not very ideal here*/}\n                        <h2 className=\"font-light\">\n                            Dejte nám Vaší emailovou adresu a my Vám budeme pravidelně jednou za měsíc posílat co se\n                            děje:\n                        </h2>\n                        <Form {...{ apiClient: this.props.apiClient }} />\n\n                        {/*TODO: Semantically h2 is not very ideal here at all*/}\n                        <h2 className=\"line separator font-light\">\n                            A jak takový mail vypadá? Tady máte živou ukázku z rozpracovaného mailu\n                            <select\n                                className={'font-light option-in-text'}\n                                onChange={(event) => {\n                                    const range = DateRange.fromConstant(event.target.value as RangeConstant);\n                                    /*console.log(\n                                            event.target.value,\n                                            DateRange.fromConstant(beginConstant),\n                                            DateRange.fromConstant(endConstant),\n                                            range,\n                                        );*/\n\n                                    this.setState({ range });\n                                }}\n                            >\n                                {OPTIONS.map((item) => (\n                                    <option value={item.value}>{item.desc}</option>\n                                ))}\n                            </select>\n                        </h2>\n                    </div>\n                </div>\n\n                <div className=\"letter white\">\n                    {/*\n                        TODO: Or make tabs - see bellow\n                        <div className=\"tab\" onClick={() => this.setState({ range: DateRange.CURRENT_MONTH })}>\n                            Aktuání měsíc\n                        </div>\n                        <div className=\"tab\" onClick={() => this.setState({ range: DateRange.ALL })}>\n                            Vše\n                        </div>\n                         */}\n\n                    <div className=\"inner\">\n                        {/*\n                            TODO: Here can be a selecotr of the months but firstly we need to add backend and better DB so it is not priority now.\n                            \n                            TODO: Or maybe like this:\n                            <select>\n                                <option>Aktuální měsíc</option>\n                                <option>Budoucí události</option>\n                                <option>Budoucí události tento měsíc</option>\n                                <option>Vše</option>\n                            </select>\n\n                            */}\n\n                        {this.state.error ? (\n                            <ErrorComponent>\n                                <pre>{this.state.error}</pre>\n                            </ErrorComponent>\n                        ) : !this.state.events ? (\n                            <LoadingComponent />\n                        ) : (\n                            <TalksPageEmail\n                                {...{\n                                    events: this.state.events,\n                                    // TODO: Remove @deprecated newsletter: this.state.newsletter,\n                                    range: this.state.range,\n                                }}\n                            />\n                        )}\n                    </div>\n                </div>\n\n                <Partners {...{ selfUrl: this.props.selfUrl }} />\n            </PageDiv>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import { createHashHistory, History } from 'history';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Router, Switch } from 'react-router-dom';\nimport { ApiClient } from './api/ApiClient';\nimport { AboutPage } from './components/AboutPage';\nimport { TalksPage } from './components/TalksPage';\nimport * as serviceWorker from './serviceWorker';\nimport { Partners } from './components/Partners';\n\n// TODO: In some time suddenly occures \"Failed to fetch\" in the\n\n// TODO: Join app and createApp\n\nexport class EventsApp {\n    private apiClient: ApiClient;\n    private history: History;\n\n    constructor(private rootElement: HTMLDivElement, private apiUrl: string, private selfUrl: string) {\n        console.log(`Starting EventsApp.`);\n        console.log('rootElement', rootElement);\n        console.log('apiUrl', apiUrl);\n        console.log('selfUrl', selfUrl);\n        this.run();\n    }\n\n    private async run() {\n        this.history = createHashHistory();\n        this.apiClient = new ApiClient(this.apiUrl);\n\n        ReactDOM.render(\n            <Router {...{ history: this.history }}>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <TalksPage {...{ apiClient: this.apiClient, selfUrl: this.selfUrl }} />\n                    </Route>\n                    <Route exact path=\"/about\">\n                        <AboutPage {...{ selfUrl: this.selfUrl }} />\n                    </Route>\n                    <Route exact path=\"/partners\">\n                        <Partners {...{ selfUrl: this.selfUrl }} />\n                    </Route>\n                </Switch>\n            </Router>,\n            this.rootElement,\n        );\n        // If you want your app to work offline and load faster, you can change\n        // unregister() to register() below. Note this comes with some pitfalls.\n        // Learn more about service workers: https://bit.ly/CRA-PWA\n        serviceWorker.unregister();\n    }\n}\n","import { EventsApp } from './EventsApp';\nimport './style/body.css';\n\n(window as any).EventsApp = EventsApp;\n"],"sourceRoot":""}